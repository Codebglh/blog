{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/bg/source/css/app.styl","path":"css/app.styl","modified":0,"renderable":1},{"_id":"themes/bg/source/css/comment.styl","path":"css/comment.styl","modified":0,"renderable":1},{"_id":"themes/bg/source/css/mermaid.styl","path":"css/mermaid.styl","modified":0,"renderable":1},{"_id":"themes/bg/source/images/404.png","path":"images/404.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/bg/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/bg/source/images/paypal.png","path":"images/paypal.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/bg/source/images/play_disc.png","path":"images/play_disc.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/bg/source/images/play_needle.png","path":"images/play_needle.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/search.png","path":"images/search.png","modified":0,"renderable":1},{"_id":"themes/bg/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"source/assets/wallpaper-2311325.jpg","path":"assets/wallpaper-2311325.jpg","modified":0,"renderable":0},{"_id":"source/assets/wallpaper-2572384.jpg","path":"assets/wallpaper-2572384.jpg","modified":0,"renderable":0},{"_id":"source/assets/wallpaper-878514.jpg","path":"assets/wallpaper-878514.jpg","modified":0,"renderable":0},{"_id":"themes/bg/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"45f99689ab270ae1ad43bb237a01aec27574dd07","modified":1614474823772},{"_id":"source/_posts/link-post.md","hash":"66ce534bb1346f941cfd282de2c8beaf41f8d963","modified":1613656743057},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1614052771873},{"_id":"source/_posts/中文測試.md","hash":"dc6e9310fa1c331bd61c63aef7c8a87dfa18b8cd","modified":1614052823504},{"_id":"themes/bg/package.json","hash":"c370074fb10c6bc7faefe883d04850b70f06932f","modified":1614069050016},{"_id":"themes/bg/.DS_Store","hash":"e80d443ddce1e8dc3dfc398376f7b7dcd5832f19","modified":1614425621081},{"_id":"themes/bg/_config.yml","hash":"9e8d598376961cbb41c4de82bd2ad0df66eda48d","modified":1614478790325},{"_id":"themes/bg/_images.yml","hash":"537890761fcd1de0df1f6675fad1be40b20c364d","modified":1614473497165},{"_id":"themes/bg/languages/ja.yml","hash":"85b99dbee84ed0d78efe7b73fd0dfcfffcd3e086","modified":1614081515617},{"_id":"themes/bg/languages/default.yml","hash":"e56bebd19d2abd1698e9aa87d337941957977468","modified":1614081515279},{"_id":"themes/bg/languages/zh-CN.yml","hash":"fa7292fd36a6be25bddf9634b7dbb77e2410bded","modified":1614069622861},{"_id":"themes/bg/languages/en.yml","hash":"fd424474aa92e6142fe6ea1a04e2598975e8e411","modified":1613811224067},{"_id":"themes/bg/layout/.DS_Store","hash":"3853b37a2df8be165ecb7ce86cf270eda01df0af","modified":1614153045992},{"_id":"themes/bg/languages/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1613813756395},{"_id":"themes/bg/layout/category.njk","hash":"ebc83df1ff0115e003e5a3e6a04278ff3ec63acf","modified":1613640481507},{"_id":"themes/bg/layout/page.njk","hash":"b22327cb7ea5daf1cf095da70b8376c9cd89e70b","modified":1613640481509},{"_id":"themes/bg/layout/index.njk","hash":"72bf1a78d915fd63b9664181c7deb9a87e1f7f67","modified":1613640481508},{"_id":"themes/bg/layout/archive.njk","hash":"ec7077303a4afa9600aa94286a6132b1376742e0","modified":1614081514849},{"_id":"themes/bg/layout/post.njk","hash":"9344c9bc310ac6a9dd7d1c8abbd3a3e4de1ec766","modified":1613640481510},{"_id":"themes/bg/layout/tag.njk","hash":"6dc9840915842de3ab7f844171696b8147e6c65f","modified":1613640481511},{"_id":"themes/bg/scripts/.DS_Store","hash":"f7bac6269953cee0e72c304dcb0c0ed14c18df17","modified":1613699215020},{"_id":"themes/bg/source/.DS_Store","hash":"e2e89cdb426ce3a661cec6625076c136e2c09c13","modified":1614425621080},{"_id":"themes/bg/layout/_alternate/json.ejs","hash":"343b618ee9b16da33b51280c2fab42ad29ae39eb","modified":1613640481481},{"_id":"themes/bg/layout/_alternate/atom.ejs","hash":"b9763bc59b0e18ec13c2c9b90bc1be9e34da166a","modified":1613640481480},{"_id":"themes/bg/layout/_alternate/rss.ejs","hash":"ed5c14dc38bd24ede842c7b2356176d20e759c56","modified":1613640481482},{"_id":"themes/bg/layout/_partials/footer.njk","hash":"20babadc45ee0fc49fcfda4e2a8b425233bfdd15","modified":1614070546565},{"_id":"themes/bg/layout/_partials/header.njk","hash":"7f7a94261afbad87bca7901c9790907137f35293","modified":1613640481495},{"_id":"themes/bg/layout/_partials/layout.njk","hash":"f0051b77f06e766451c6c46da08acf50e5a88400","modified":1614131063031},{"_id":"themes/bg/layout/_partials/.DS_Store","hash":"89c2384ca1a4ab43a69cedeb1fcab16303062ecb","modified":1613699215014},{"_id":"themes/bg/layout/_macro/comment.njk","hash":"7331492119ccaf0ed3034f6118a01f31426be972","modified":1613640481486},{"_id":"themes/bg/layout/_macro/breadcrumb.njk","hash":"1c464f539d3349baf1e2b4fcc1383ee90d964287","modified":1613640481484},{"_id":"themes/bg/layout/_partials/pagination.njk","hash":"8960c767d3c5a7beaef5f6040310c3776b757f03","modified":1613640481496},{"_id":"themes/bg/layout/_macro/card.njk","hash":"d189b55fa55a83af1bec2d1f822b8827b0f81c01","modified":1613640481485},{"_id":"themes/bg/layout/_macro/postmeta.njk","hash":"0f2d1cbcca2ad19186b90a6db08a5159407a3178","modified":1613640481487},{"_id":"themes/bg/layout/_macro/widgets.njk","hash":"5abd33cb1febd7b27ca050ba75aa0966c4f89d53","modified":1613640481489},{"_id":"themes/bg/layout/_macro/sidebar.njk","hash":"e7fada626a89769f9f8b4d94efb702ab5ff0f138","modified":1613640481488},{"_id":"themes/bg/scripts/filters/locals.js","hash":"45c5c30d70b033edd7595d4cb847b7c4ccbf81de","modified":1613642184050},{"_id":"themes/bg/scripts/filters/post.js","hash":"37cc926d7d11e6c2ecc14785ae32140541d0fd43","modified":1613642184051},{"_id":"themes/bg/scripts/generaters/archive.js","hash":"a548c9ca74c6757382a306f0b1e54c5400429083","modified":1613642184053},{"_id":"themes/bg/scripts/generaters/config.js","hash":"d82b2ce3f25b7e02f0d2510cac2a5e42e610b642","modified":1613642184055},{"_id":"themes/bg/scripts/generaters/images.js","hash":"c16389f4e64434f8c91ac6a0a4da607a274f7321","modified":1613642184056},{"_id":"themes/bg/scripts/generaters/index.js","hash":"b9148d7457ad11946334c321fa35d911f347425a","modified":1613642184057},{"_id":"themes/bg/scripts/generaters/pages.js","hash":"b83097275b0327b0c1e0ebfb2a40640c8096c088","modified":1613642184058},{"_id":"themes/bg/scripts/generaters/script.js","hash":"6684deb13c29dc24a74dc226257a0999645994d7","modified":1613650264651},{"_id":"themes/bg/layout/_macro/segment.njk","hash":"532df83485ee9bab7a9c919058d3ab7be65c3f18","modified":1613640481487},{"_id":"themes/bg/scripts/helpers/asset.js","hash":"93fa2f7c40491d3175621b5ef0aaa174b528bcd9","modified":1613642184061},{"_id":"themes/bg/scripts/helpers/engine.js","hash":"577f2c234ddad5dd35379f6161e21c4673bf5b7f","modified":1614177830134},{"_id":"themes/bg/scripts/helpers/list_categories.js","hash":"5a1a2a51731c2a1d45173bd7bfb5c5e3fc46eddf","modified":1613642184062},{"_id":"themes/bg/scripts/renderer/njk.js","hash":"f3e76bdb1aabc7a04fda4c123b598fa2c24dfc46","modified":1613642184064},{"_id":"themes/bg/scripts/tags/links.js","hash":"1283f7916863f29fcbe1f3f36813d1d8c940a1b4","modified":1613642184065},{"_id":"themes/bg/scripts/tags/media.js","hash":"515e5f7e76d4ea2573302ae6edd933dba86da10e","modified":1613642184066},{"_id":"themes/bg/source/css/.DS_Store","hash":"abdd97934e756a6a8be1373ef1c92b1ff8745012","modified":1613813788272},{"_id":"themes/bg/source/css/_colors.styl","hash":"42a556c1544394b4cd0a3ce526c9a30b08d5952e","modified":1613642184092},{"_id":"themes/bg/source/css/_iconfont.styl","hash":"45d1f2d09e3769ffe8d371a314d345b70b00015a","modified":1613642184173},{"_id":"themes/bg/source/css/_mixins.styl","hash":"858e238acb07a242f901f1b59f69d323c83bf5ea","modified":1613642184174},{"_id":"themes/bg/source/css/_variables.styl","hash":"36069cddfa7d3f2d852d20c9e0e9ebf947e7e287","modified":1613642184175},{"_id":"themes/bg/source/css/app.styl","hash":"46312264dc3878bc2bd54e6d7171081bfa7477d6","modified":1613642184176},{"_id":"themes/bg/source/css/comment.styl","hash":"e83d7dfc7b789342050a41ba5a8482f0875c18bc","modified":1613642184177},{"_id":"themes/bg/source/css/mermaid.styl","hash":"7720ca8fc84b975d95fd11d7971f125aa3062a23","modified":1613642184178},{"_id":"themes/bg/source/js/.DS_Store","hash":"05ab3e22589a2c7f16a3c03ff2f077ea605d14ae","modified":1614425621084},{"_id":"themes/bg/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1613813669419},{"_id":"themes/bg/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1613642184180},{"_id":"themes/bg/source/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1613642184179},{"_id":"themes/bg/source/images/logo.svg","hash":"48014a7148fde766848eb4701c8df421a17cb74b","modified":1613642184186},{"_id":"themes/bg/source/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1613642184181},{"_id":"themes/bg/source/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1613642184182},{"_id":"themes/bg/source/images/avatar.jpg","hash":"49076bdf8e78315e741226f6af85e26335ab8242","modified":1613741568344},{"_id":"themes/bg/source/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1613642184187},{"_id":"themes/bg/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1613642184184},{"_id":"themes/bg/source/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1613642184188},{"_id":"themes/bg/source/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1613642184188},{"_id":"themes/bg/source/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1613642184185},{"_id":"themes/bg/source/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1613642184189},{"_id":"themes/bg/layout/_partials/post/copyright.njk","hash":"9b0f6477e8e5cc6d5da04545b23992766a8ad324","modified":1614071456891},{"_id":"themes/bg/layout/_partials/head/head.njk","hash":"d02e0ddada3e6c4b4420a5386bc1304031b702a2","modified":1613640481493},{"_id":"themes/bg/layout/_partials/head/head_unique.njk","hash":"953812d48987b3491ea011d2b50cf7bef07f3742","modified":1613640481494},{"_id":"themes/bg/source/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1613642184191},{"_id":"themes/bg/layout/_partials/post/footer.njk","hash":"b0c1cfe766b82551939c52197473adbdf5e33401","modified":1613640481500},{"_id":"themes/bg/layout/_partials/post/nav.njk","hash":"964963a15cc242b34310858ae14bd1a0bed06fe5","modified":1613640481501},{"_id":"themes/bg/layout/_partials/post/post.njk","hash":"8ed321922aae0a078dc0e1ec49a619dd1b222017","modified":1613640481502},{"_id":"themes/bg/layout/_partials/sidebar/menu.njk","hash":"6137a83379a61af0eef4d6f92e15f0d488c9f36c","modified":1613640481503},{"_id":"themes/bg/layout/_partials/post/reward.njk","hash":"38f0a30361d6354b3a44183a12497c4e31861017","modified":1613640481502},{"_id":"themes/bg/layout/_partials/third-party/baidu-analytics.njk","hash":"a22788fbc12186ddd8bbd963146177cdaa95646c","modified":1613640481505},{"_id":"themes/bg/layout/_partials/sidebar/overview.njk","hash":"11bab5261ce71de61cdad88db1351269ddb58946","modified":1614392632697},{"_id":"themes/bg/source/css/_common/.DS_Store","hash":"770fc7f5c271a2a27d1e5a55c4cc03ff4619cb3f","modified":1613813801403},{"_id":"themes/bg/source/js/_app/dom.js","hash":"a917bfdae26c263cb9de962f88b11502907d9eb7","modified":1613642184193},{"_id":"themes/bg/source/js/_app/global.js","hash":"54b49931de5153e9176c47faa35c172e60c7d450","modified":1613642184195},{"_id":"themes/bg/source/js/_app/fireworks.js","hash":"077572d0714b5c6801ae4598df7a85936296a77a","modified":1613642184194},{"_id":"themes/bg/source/js/_app/page.js","hash":"3eaa5130022208e9cc5d7877ffb0e75937faffdc","modified":1613642184195},{"_id":"themes/bg/source/js/_app/pjax.js","hash":"fdbe71821464d2df6b512634e419e86c15adc275","modified":1614071977097},{"_id":"themes/bg/source/js/_app/player.js","hash":"8ae60451ad0dc19699f5a9a54d00924a04c6d588","modified":1613642184197},{"_id":"themes/bg/source/js/_app/utils.js","hash":"2f01f5b4dde29324e678c8e6c7800e32e489b8fe","modified":1613642184199},{"_id":"themes/bg/source/js/_app/sidebar.js","hash":"eb636cdea405c3aee4f7b7dea734943035cb8572","modified":1613642184198},{"_id":"themes/bg/source/css/_common/outline/.DS_Store","hash":"189a9f61d705cd88d21bdd5735a2bfdbdb8184cb","modified":1613813801402},{"_id":"themes/bg/source/css/_common/outline/mobile.styl","hash":"3dd4a95737f28d93f18b5c1fdd4ab9675871e89b","modified":1613642184150},{"_id":"themes/bg/source/css/_common/scaffolding/animate.styl","hash":"3bdb5855ccc98b11d8810ead8c082bcaf5f39360","modified":1613642184162},{"_id":"themes/bg/source/css/_common/scaffolding/base.styl","hash":"c0612edeb3ec3758f4826c2ca5dadb8c28df7086","modified":1613642184162},{"_id":"themes/bg/source/css/_common/outline/outline.styl","hash":"8e1c6ac3fc4f36b710090d9ceecdc91af8af5a67","modified":1613642184151},{"_id":"themes/bg/source/css/_common/scaffolding/divider.styl","hash":"c2dfeadb72a7c898a455e163f11ee17c6b3941bb","modified":1613642184164},{"_id":"themes/bg/source/css/_common/scaffolding/iconfont.styl","hash":"45d1f2d09e3769ffe8d371a314d345b70b00015a","modified":1613642184165},{"_id":"themes/bg/source/css/_common/scaffolding/buttons.styl","hash":"aab14e7fe7c466576b3d70c741d2526364d07874","modified":1613642184163},{"_id":"themes/bg/source/css/_common/scaffolding/normalize.styl","hash":"27e12cd7619f80f0df4761201d1b6b9366262270","modified":1613642184166},{"_id":"themes/bg/source/css/_common/scaffolding/ribbon.styl","hash":"3ccaed5ca1497c0b6eeaaafb777db9c67ce2121e","modified":1613642184168},{"_id":"themes/bg/source/css/_common/scaffolding/scaffolding.styl","hash":"2a54e8ddf6cf14fec00b010d5ced577670bd8027","modified":1613642184168},{"_id":"themes/bg/source/css/_common/scaffolding/pagination.styl","hash":"7632764beb8d937ec6a4dcf08a9b5e9a2d904845","modified":1613642184167},{"_id":"themes/bg/source/css/_common/scaffolding/tip.styl","hash":"0247e72526f99d92b2d44c15aa626742873caa3c","modified":1613642184172},{"_id":"themes/bg/source/css/_common/scaffolding/toggles.styl","hash":"06d2c4b90c83e34ada52fb24c23a3619edd8f784","modified":1613642184173},{"_id":"themes/bg/source/css/_common/scaffolding/scrollbar.styl","hash":"0b65e121550b1c816e021f23a54f161a30ab29a2","modified":1613642184169},{"_id":"themes/bg/source/css/_common/scaffolding/tables.styl","hash":"64e746ba8498b407cb122ea8f0c0f82108388e12","modified":1613642184170},{"_id":"themes/bg/source/css/_common/outline/footer/footer.styl","hash":"f3a1ebc96370ba9eab412ff646f2720981befff0","modified":1613642184141},{"_id":"themes/bg/source/css/_common/outline/header/brand.styl","hash":"907482ef812c0c6bfe0aa97bda5b615e5d866364","modified":1613642184143},{"_id":"themes/bg/source/css/_common/outline/header/header.styl","hash":"9d953fbcb959ebace0a2ab9f7cf022261c0adaa5","modified":1613642184144},{"_id":"themes/bg/source/css/_common/components/components.styl","hash":"d79464e5992954d2e8b093c44579166db61e99d3","modified":1614068519240},{"_id":"themes/bg/source/css/_common/outline/header/menu.styl","hash":"b7afe5c76314d61fc69b62dbeb4717058484b0d9","modified":1613642184146},{"_id":"themes/bg/source/css/_common/outline/header/image.styl","hash":"dbb15a0f85fba918f8e4842be4f88278685d9e5a","modified":1613642184145},{"_id":"themes/bg/source/css/_common/outline/header/waves.styl","hash":"d3e90e31be3f2fad345acaaa4822dd9995ad17a3","modified":1613642184149},{"_id":"themes/bg/source/css/_common/outline/header/tool.styl","hash":"4c90c6c5daee084b8741c106012618fe9f7dbd23","modified":1613642184148},{"_id":"themes/bg/source/css/_common/outline/header/nav.styl","hash":"84d1bea3bb5f3ad9384f8c9ad0b6cc345c3d2269","modified":1613642184147},{"_id":"themes/bg/source/css/_common/outline/header/right.styl","hash":"eace1eeb80bb6af6a87735d5adf0b1a9c4cc8ada","modified":1613642184147},{"_id":"themes/bg/source/css/_common/outline/sidebar/author.styl","hash":"0d16286549a33c762664e89aecb18eaa4eb330b0","modified":1613642184152},{"_id":"themes/bg/source/css/_common/outline/sidebar/dimmer.styl","hash":"373baf0c5e50363e7c60c53ccfed32ef565c38c7","modified":1613642184153},{"_id":"themes/bg/source/css/_common/outline/sidebar/menu.styl","hash":"436402a77624d8b6fc2a67068a3b51ff317baa62","modified":1613642184154},{"_id":"themes/bg/source/css/_common/outline/sidebar/quick.styl","hash":"3da1dc88d42050e44f4e76daa41d2a5befeffa22","modified":1613642184155},{"_id":"themes/bg/source/css/_common/outline/sidebar/related.styl","hash":"71496a1be370db66843e2661e5594a6a1898c3c6","modified":1613642184156},{"_id":"themes/bg/source/css/_common/outline/sidebar/sidebar.styl","hash":"740535dece990c2e4ae56e2e5aac7cea8c099b18","modified":1613642184156},{"_id":"themes/bg/source/css/_common/outline/sidebar/state.styl","hash":"e54b26894d3c63032b9be7d7e0f63feb3bd3a20a","modified":1613642184158},{"_id":"themes/bg/source/css/_common/outline/sidebar/social.styl","hash":"4854aec659aac752b60836eef4aeae0e1312ff82","modified":1613642184157},{"_id":"themes/bg/source/css/_common/outline/sidebar/tab.styl","hash":"5aff5ddcc8d0bf4df33de7a4919e0aa040a40ca2","modified":1613642184159},{"_id":"themes/bg/source/css/_common/outline/sidebar/toc.styl","hash":"e431443ddfc83aa39dd28e3ce645529694a3e266","modified":1613642184160},{"_id":"themes/bg/source/css/_common/components/highlight/highlight.styl","hash":"b47eea33d53ad8a4e47c56e0005c92473dff669e","modified":1613642184096},{"_id":"themes/bg/source/css/_common/components/pages/collapse.styl","hash":"6706bdf8e3124cd786e628602bb8078cfe302a4b","modified":1613642184098},{"_id":"themes/bg/source/css/_common/components/pages/home.styl","hash":"0931583240230e2e9994cc567d497f47a276a766","modified":1613642184099},{"_id":"themes/bg/source/css/_common/components/highlight/operation.styl","hash":"a231b09682dedd2c5aae41995d2e7292ffc2cf9b","modified":1613642184096},{"_id":"themes/bg/source/css/_common/components/pages/pages.styl","hash":"18732826b68efdf1e4fa85a3f92b101bfaff0b1f","modified":1613642184100},{"_id":"themes/bg/source/css/_common/components/pages/tag-cloud.styl","hash":"a890a98b78270e32990604dcd34e8f5cd5aca036","modified":1613642184101},{"_id":"themes/bg/source/css/_common/components/tags/collapse.styl","hash":"aae4f6d940ce0c52595bda79c4f7b5231ec9e35f","modified":1613642184116},{"_id":"themes/bg/source/css/_common/components/tags/container.styl","hash":"9dc06ad65267f9552deadaf23bd4f0ff4bc2f143","modified":1613642184117},{"_id":"themes/bg/source/css/_common/components/tags/label.styl","hash":"f7976cbdc69b577264f1737f1d2bd8996ed72a46","modified":1613642184118},{"_id":"themes/bg/source/css/_common/components/tags/list.styl","hash":"da2af4a9e9a66b4b03817ffe5e610d0dfb7a17d4","modified":1613642184120},{"_id":"themes/bg/source/css/_common/components/tags/links.styl","hash":"d90e56e9b21b15af5b78f824b033e52b13383fec","modified":1613642184119},{"_id":"themes/bg/source/css/_common/components/tags/quiz.styl","hash":"d35b5a05336af03a2223631f37b060c0cbbc9c4f","modified":1613642184123},{"_id":"themes/bg/source/css/_common/components/tags/tabs.styl","hash":"fd1d793c9532c14a44312743b66c163440c533f9","modified":1613642184124},{"_id":"themes/bg/source/css/_common/components/tags/note.styl","hash":"f358448cfe80b9641492dacc1e5c9027f6a6165f","modified":1613642184121},{"_id":"themes/bg/source/css/_common/components/tags/player.styl","hash":"8327815a17b617fe1e6dc67cbd713f4c559f57ea","modified":1613642184122},{"_id":"themes/bg/source/css/_common/components/tags/tags.styl","hash":"b397ce0eb2bec9dcc2e6f7f770ea351eba0b3403","modified":1613642184124},{"_id":"themes/bg/source/css/_common/components/third-party/loading.styl","hash":"551c60b7597160aaebe9f7b0c2efc5b1f5aad124","modified":1613642184126},{"_id":"themes/bg/source/css/_common/components/third-party/search.styl","hash":"dbc0a97e86e94c771112bbdb0ce8f20fb714dca8","modified":1613642184135},{"_id":"themes/bg/source/css/_common/components/third-party/theme.styl","hash":"ce162fa39cad04e41de2bd1aa491fd442f678cf6","modified":1613642184136},{"_id":"themes/bg/source/css/_common/components/third-party/third-party.styl","hash":"b496991b13c1c48972addf19f0a5ba9ab6887f8a","modified":1613642184137},{"_id":"themes/bg/source/css/_common/components/third-party/valine.styl","hash":"9263dd35f48a0ee2c5a30e68ded287c7a7c9761d","modified":1613642184138},{"_id":"themes/bg/source/css/_common/components/third-party/widgets.styl","hash":"cdbd2b2d8d76216de2753c44eee3f134a81332c0","modified":1613642184138},{"_id":"themes/bg/source/css/_common/components/third-party/pace.styl","hash":"15371614ff30edb87768bce771aecc6fc99f17a4","modified":1613642184134},{"_id":"themes/bg/source/css/_common/components/post/breadcrumb.styl","hash":"b7b3ff728fff411639402f9951ce14a88e6a20f6","modified":1613642184104},{"_id":"themes/bg/source/css/_common/components/post/copyright.styl","hash":"c5f9fd384e5682eea88258a2307b4bc8875cfb5c","modified":1613642184106},{"_id":"themes/bg/source/css/_common/components/post/footer.styl","hash":"634268e1f4e75858a98ebf4253026455a4458d23","modified":1613642184109},{"_id":"themes/bg/source/css/_common/components/post/header.styl","hash":"0309d9d3a2c7a511faf2b0881932b4bac7144e25","modified":1613642184109},{"_id":"themes/bg/source/css/_common/components/post/post.styl","hash":"0861df864b8afb32fb8160d25e5c9d63adccbf3c","modified":1613642184111},{"_id":"themes/bg/source/css/_common/components/post/reward.styl","hash":"3a4f5c15bee5da47bc914550439d26c80549df13","modified":1613642184112},{"_id":"themes/bg/source/css/_common/components/post/expand.styl","hash":"b78ba13e660046d02b9e1ccb9cd4162ae2478816","modified":1613642184108},{"_id":"themes/bg/source/css/_common/components/post/nav.styl","hash":"95d2cc80341875e25765d029df5b5324f6cc390a","modified":1613642184110},{"_id":"themes/bg/source/css/_common/components/post/tags.styl","hash":"68d4e96d15ca62a89665421ff01f57265e707a7a","modified":1613642184114},{"_id":"themes/bg/source/css/_common/components/post/rtl.styl","hash":"d909dcbc0e61358a5804161470ac9064049f1a36","modified":1613642184113},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/class.styl","hash":"e942b2308a788865b451fbc2cf1718dcdf93299e","modified":1613642184127},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/flowchart.styl","hash":"85f5d3f3da9d86fcf9999f3af1e1b837d55206af","modified":1613642184128},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/gantt.styl","hash":"61c66a462b78a836226a2d8debb945aa5b3b3429","modified":1613642184129},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/git.styl","hash":"19b6b3c75dac1426d75c81fa1bf0da7482fcde96","modified":1613642184130},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/mermaid.styl","hash":"4dc498f13fb656711d5e2acc9b6d48cbdd747609","modified":1613642184131},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/sequence.styl","hash":"8630ac2eb00713109d885143b9d0776d1e8a6e1c","modified":1613642184133},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/pie.styl","hash":"8da616dcd22b4f2619d817b0cf4986d0aa66954d","modified":1613642184132},{"_id":"themes/bg/source/css/_common/components/third-party/mermaid/state.styl","hash":"5c03ccd22355e159169c341616b2e157516825a3","modified":1613642184133},{"_id":"public/rss.xml","hash":"5c87c1c8f17ec01f2e39cd42eb9b9400bd236253","modified":1614478418294},{"_id":"public/atom.xml","hash":"1d27c2fc2139bd07c2d493dd827d328f79dc7071","modified":1614478418294},{"_id":"public/feed.json","hash":"e4f4154124e9134ba3f942433a47c94e191e2e72","modified":1614478418294},{"_id":"public/2013/12/24/中文測試/index.html","hash":"69692224b564c94b1d5a9a4d7d8a39d13b9d2de8","modified":1614253252286},{"_id":"public/2013/12/24/link-post/index.html","hash":"b7c23e4f0e32452ad0b100fa248690e372bc9f2c","modified":1614253252286},{"_id":"public/archives/index.html","hash":"2be55944c5e1858861aff15168a4659e6119ad65","modified":1614478804926},{"_id":"public/archives/2013/index.html","hash":"218d2ff627d1f51efe17cc2bb7e5ce64666d0ca6","modified":1614253252286},{"_id":"public/index.html","hash":"1714c158069380c14ca56154ec350a4296c1455c","modified":1614478804926},{"_id":"public/archives/2013/12/index.html","hash":"87db25c5024df7bc8e56edcc5c1ecded8ac64be6","modified":1614253252286},{"_id":"public/tags/index.html","hash":"60570d310314b17bac135d6f90cc2b35b6451eff","modified":1614478804926},{"_id":"public/categories/index.html","hash":"51d6b1671c74864da3bd88ab6532c40c01c3fade","modified":1614478804926},{"_id":"public/404.html","hash":"55c214d34440e9cdec0ff1a0a61a58b40e173aca","modified":1614478804926},{"_id":"public/js/app.js","hash":"2dbb52c5c310698cc21aa88b0738336e313031a7","modified":1614477887817},{"_id":"public/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1614252967872},{"_id":"public/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1614252967872},{"_id":"public/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1614252967872},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1614252967872},{"_id":"public/images/avatar.jpg","hash":"49076bdf8e78315e741226f6af85e26335ab8242","modified":1614403897568},{"_id":"public/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1614252967872},{"_id":"public/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1614252967872},{"_id":"public/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1614252967872},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1614252967872},{"_id":"public/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1614252967872},{"_id":"public/images/logo.svg","hash":"48014a7148fde766848eb4701c8df421a17cb74b","modified":1614252967872},{"_id":"public/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1614252967872},{"_id":"public/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1614252967872},{"_id":"public/css/comment.css","hash":"02095bbceb2776977774348a2f347a7995b19327","modified":1614252967872},{"_id":"public/css/mermaid.css","hash":"3fe1b97a64b969d4d7a470a4929cb432afefd1bd","modified":1614252967872},{"_id":"public/css/app.css","hash":"224eeca65e5f118dc0e2256e52cae9eb0f102961","modified":1614252967872},{"_id":"source/friends/index.md","hash":"b4a314357a650429ceb8b6d62b0bd54bf6289a8a","modified":1605039165000},{"_id":"source/friends/_data.yml","hash":"501be211d5f02bfd1a95a80f5e04a0fff5173a16","modified":1605039165000},{"_id":"source/assets/wallpaper-2572384.jpg","hash":"1df3620ab8c69fe2498a746f8ead057162df0637","modified":1605039165000},{"_id":"source/assets/wallpaper-878514.jpg","hash":"9f9705a377c42320b335b3c66b023e62b80e56e3","modified":1605039165000},{"_id":"source/assets/wallpaper-2311325.jpg","hash":"ddaaaeb4fa04a05c83053c1f8149720d18c9c8de","modified":1605039165000},{"_id":"public/friends/index.html","hash":"3a59ee4124acad28a1ee9901a63a3772f9160b6b","modified":1614478804926},{"_id":"public/assets/wallpaper-2572384.jpg","hash":"1df3620ab8c69fe2498a746f8ead057162df0637","modified":1614392050152},{"_id":"public/assets/wallpaper-878514.jpg","hash":"9f9705a377c42320b335b3c66b023e62b80e56e3","modified":1614392050152},{"_id":"public/assets/wallpaper-2311325.jpg","hash":"ddaaaeb4fa04a05c83053c1f8149720d18c9c8de","modified":1614392050152},{"_id":"themes/bg/source/images/r.jpg","hash":"49076bdf8e78315e741226f6af85e26335ab8242","modified":1614392337438},{"_id":"themes/bg/source/images/avataar.jpg","hash":"49076bdf8e78315e741226f6af85e26335ab8242","modified":1614393293754},{"_id":"themes/bg/source/images/avatar.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1614393301755},{"_id":"public/images/avatar.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1614393309860},{"_id":"public/images/avataar.jpg","hash":"49076bdf8e78315e741226f6af85e26335ab8242","modified":1614393309860},{"_id":"themes/bg/_images的副本.yml","hash":"43b5d73dfe523be1c949e83f6a42b17db6030343","modified":1614244127998},{"_id":"source/_posts/hexo简介.md","hash":"de5a5c5b8831ddaffe8e86f569b96802669b64f6","modified":1614059948310},{"_id":"source/_posts/mysql管理软件.md","hash":"efaf2d341f36275fae1ac7ddd95872956083be54","modified":1614154572036},{"_id":"source/_posts/python.pip.md","hash":"4bf088c7d4212c9c53de49d8054ba72c7dfd0531","modified":1614148566174},{"_id":"source/_posts/主题开发.md","hash":"34f02d9e521942bc5381e58cdee1c70f88017a09","modified":1614426977387},{"_id":"public/archives/2021/index.html","hash":"0848797583ee30a52278510efe5841d3827d2691","modified":1614478804926},{"_id":"public/archives/2021/02/index.html","hash":"07f6ba6ad57e9fb79b706a38d365ede57dd96f81","modified":1614478804926},{"_id":"public/2021/02/24/mysql管理软件/index.html","hash":"f76e2323a245c0303da6a4eeb712de663cc7398a","modified":1614476835501},{"_id":"public/2021/02/24/python.pip/index.html","hash":"02ed303620f6c443bdd2bae549be2904f93353d5","modified":1614476835501},{"_id":"public/2021/02/23/主题开发/index.html","hash":"ff768cc443d77e382c85eea1dc37005f1b7ee717","modified":1614475842683},{"_id":"public/2021/02/23/hexo简介/index.html","hash":"0416758721a6251adb3b52d1eabeb98bea0f8e4f","modified":1614475842683},{"_id":"source/_posts/hexo/hexo简介.md","hash":"de5a5c5b8831ddaffe8e86f569b96802669b64f6","modified":1614476809345},{"_id":"source/_posts/hexo/主题开发.md","hash":"8900319c14c9f0d486eaaa2cd742ffb1af71dced","modified":1614478133447},{"_id":"public/2021/02/23/hexo/主题开发/index.html","hash":"9947dba712b34d08d0f1bc80f1b755b828d31a76","modified":1614476835501},{"_id":"public/2021/02/23/hexo/hexo简介/index.html","hash":"22777709b67204a3fc66186b8a2f3beed9e3ba33","modified":1614476835501},{"_id":"public/archives/2020/index.html","hash":"b26256ea51dab09e66faafd773c1b2cb21152ea0","modified":1614478804926},{"_id":"public/archives/2020/04/index.html","hash":"a4e88b9b47d23fa92280e05815fe14ca02ab8f88","modified":1614478804926},{"_id":"public/categories/hexo/index.html","hash":"9ee9e0fdfd1fc3685ca289386d39dc0f48552ff8","modified":1614478143502},{"_id":"public/categories/hexo/零基础学Java语言-浙江大学-翁恺/index.html","hash":"ea16f4b82133cee8b424d37fb675a80a8d086c57","modified":1614478143502},{"_id":"public/mysql管理软件/index.html","hash":"9a457bceedef35bd442d1be4a1d6fd42aa6bae3a","modified":1614478804926},{"_id":"public/python.pip/index.html","hash":"f9366a708c3b47d03ccee11593bb29b15518461d","modified":1614478804926},{"_id":"public/hexo/hexo简介/index.html","hash":"f5ab5803e763ac3a4e4e5c44832df590996f4d29","modified":1614478804926},{"_id":"public/hexo/主题开发/index.html","hash":"912feeb28be43c1cf2b32303849694270cb5d981","modified":1614478143502},{"_id":"source/_posts/hexo/hexo/course-1/cover.jpg","hash":"57341ddf90eeb71d0b9a3fef8cf1f094f9c299b3","modified":1614478284416},{"_id":"source/_posts/hexo/hexo/course-1/week-1.md","hash":"6bd9d2d2776d899bb2e66ef4a69ad50f1de1e0ce","modified":1614478284417},{"_id":"source/_posts/hexo/hexo/course-1/week-2.md","hash":"acec1f17433bf7b50af88bb02835381924b0ac7b","modified":1614478284417},{"_id":"source/_posts/hexo/hexo/主题开发.md","hash":"6e8949fef0731f7fa0ec3852d6cbe9bac6d78785","modified":1614478324147},{"_id":"source/_posts/hexo/hexo/cover.jpg","hash":"57341ddf90eeb71d0b9a3fef8cf1f094f9c299b3","modified":1614478251338},{"_id":"public/categories/计算机科学/index.html","hash":"a9dae54a5c200b4d2508a193cc06fdcd5d48120f","modified":1614478804926},{"_id":"public/categories/计算机科学/Java/index.html","hash":"136a30cd07eeefe1bd17e060927ccd4b3486cb2c","modified":1614478804926},{"_id":"public/categories/计算机科学/Java/零基础学Java语言-浙江大学-翁恺/index.html","hash":"11b05859e2af7779f45ca4deb2cda418cc9c6e99","modified":1614478804926},{"_id":"public/categories/博客/index.html","hash":"93b0ccc17bcdaa057f416ca70b24af9a852af349","modified":1614478804926},{"_id":"public/categories/博客/Java/index.html","hash":"cfc2ee33fcb75c51f1f4b9104149ceb76868dacc","modified":1614478804926},{"_id":"public/categories/博客/Java/零基础学Java语言-浙江大学-翁恺/index.html","hash":"8aed85d3099ef7c3a742dd251117b1757e5449eb","modified":1614478804926},{"_id":"public/hexo/hexo/course-1/week-2/index.html","hash":"55f5eabd06eb0f0d82310217bd4ef6acfc1cfa5e","modified":1614478804926},{"_id":"public/hexo/hexo/主题开发/index.html","hash":"ee576a283498244341dc67d5f7fd28b67a136ed4","modified":1614478804926},{"_id":"public/hexo/hexo/course-1/week-1/index.html","hash":"fa644f621d3f3d07448c0169e19f0e25d1941e57","modified":1614478804926}],"Category":[{"name":"计算机科学","_id":"ckloi19y400003fzihtl40fm3"},{"name":"Java","parent":"ckloi19y400003fzihtl40fm3","_id":"ckloi19y500013fzi7we6fy23"},{"name":"零基础学Java语言-浙江大学-翁恺","parent":"ckloi19y500013fzi7we6fy23","_id":"ckloi19y600023fzi4c738z1h"},{"name":"hexo","_id":"ckloi270v00063fzi9lh88v32"},{"name":"Java","parent":"ckloi270v00063fzi9lh88v32","_id":"ckloi270v00073fzi0kbc8lxy"},{"name":"零基础学Java语言-浙江大学-翁恺","parent":"ckloi270v00073fzi0kbc8lxy","_id":"ckloi270w00083fzigy8edwcz"},{"name":"零基础学Java语言-浙江大学-翁恺","parent":"ckloi270v00063fzi9lh88v32","_id":"ckloietm7000c3fzi8esjbqam"},{"name":"博客","_id":"ckloirl3z0001okzid66uhh1k"},{"name":"Java","parent":"ckloirl3z0001okzid66uhh1k","_id":"ckloirl410002okzievmn9azt"},{"name":"零基础学Java语言-浙江大学-翁恺","parent":"ckloirl410002okzievmn9azt","_id":"ckloirl420003okzi0etj9wql"}],"Data":[],"Page":[{"title":"友情链接","keywords":"友情链接","description":"霜月琉璃的小伙伴们","copyright":false,"_content":"\n# 本站信息\n- 站名： 優萌初華\n- 站长： 霜月琉璃\n- 地址： https://shoka.lostyu.me\n- 标志： ![霜月琉璃](https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg){height=\"100\" width=\"100\"}\n- 简介： 琉璃的医学 & 编程笔记\n\n# 申请方法\n- 添加本站后，在本页留言，格式如下\n\n~~~yml\n```yml\n- site: #网站的名字\n  owner: #您的名字\n  url: #您的网址\n  desc: #简短描述\n  image: #一张图片\n  color: #方块颜色\n```\n~~~\n\n# 小伙伴们\n{% linksfile friends/_data.yml %}\n\n","source":"friends/index.md","raw":"---\ntitle: 友情链接\nkeywords: 友情链接\ndescription: 霜月琉璃的小伙伴们\ncopyright: false\n---\n\n# 本站信息\n- 站名： 優萌初華\n- 站长： 霜月琉璃\n- 地址： https://shoka.lostyu.me\n- 标志： ![霜月琉璃](https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg){height=\"100\" width=\"100\"}\n- 简介： 琉璃的医学 & 编程笔记\n\n# 申请方法\n- 添加本站后，在本页留言，格式如下\n\n~~~yml\n```yml\n- site: #网站的名字\n  owner: #您的名字\n  url: #您的网址\n  desc: #简短描述\n  image: #一张图片\n  color: #方块颜色\n```\n~~~\n\n# 小伙伴们\n{% linksfile friends/_data.yml %}\n\n","date":"2021-02-26T15:30:59.413Z","updated":"2020-11-10T20:12:45.000Z","path":"friends/index.html","_id":"ckln35fau0000jd5cc7h086f4","comments":1,"layout":"page","content":"<h1 id=\"本站信息\"><a class=\"anchor\" href=\"#本站信息\">#</a> 本站信息</h1>\n<ul>\n<li>站名： 優萌初華</li>\n<li>站长： 霜月琉璃</li>\n<li>地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">https://shoka.lostyu.me</span></li>\n<li>标志： <img data-src=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\" alt=\"霜月琉璃\" height=\"100\" width=\"100\" /></li>\n<li>简介： 琉璃的医学 &amp; 编程笔记</li>\n</ul>\n<h1 id=\"申请方法\"><a class=\"anchor\" href=\"#申请方法\">#</a> 申请方法</h1>\n<ul>\n<li>添加本站后，在本页留言，格式如下</li>\n</ul>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```yml</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">site:</span> <span class=\"comment\">#网站的名字</span></span><br><span class=\"line\">  <span class=\"attr\">owner:</span> <span class=\"comment\">#您的名字</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"comment\">#您的网址</span></span><br><span class=\"line\">  <span class=\"attr\">desc:</span> <span class=\"comment\">#简短描述</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"comment\">#一张图片</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"comment\">#方块颜色</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"小伙伴们\"><a class=\"anchor\" href=\"#小伙伴们\">#</a> 小伙伴们</h1>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n","site":{"data":{}},"length":200,"excerpt":"","more":"<h1 id=\"本站信息\"><a class=\"anchor\" href=\"#本站信息\">#</a> 本站信息</h1>\n<ul>\n<li>站名： 優萌初華</li>\n<li>站长： 霜月琉璃</li>\n<li>地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">https://shoka.lostyu.me</span></li>\n<li>标志： <img data-src=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\" alt=\"霜月琉璃\" height=\"100\" width=\"100\" /></li>\n<li>简介： 琉璃的医学 &amp; 编程笔记</li>\n</ul>\n<h1 id=\"申请方法\"><a class=\"anchor\" href=\"#申请方法\">#</a> 申请方法</h1>\n<ul>\n<li>添加本站后，在本页留言，格式如下</li>\n</ul>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```yml</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">site:</span> <span class=\"comment\">#网站的名字</span></span><br><span class=\"line\">  <span class=\"attr\">owner:</span> <span class=\"comment\">#您的名字</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"comment\">#您的网址</span></span><br><span class=\"line\">  <span class=\"attr\">desc:</span> <span class=\"comment\">#简短描述</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"comment\">#一张图片</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"comment\">#方块颜色</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"小伙伴们\"><a class=\"anchor\" href=\"#小伙伴们\">#</a> 小伙伴们</h1>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n"}],"Post":[{"_content":"# Mac 修改pip 镜像源\n\n1. 进入根目录：`cd ~/`\n2. 进入.pip目录 `cd .pip`\n3. 如果不存在文件夹就新建`mkdir .pip`\n4. 进入 `cd .pip`\n5. 创建pip.conf文件 `touch pip.conf`\n6. 修改：`vim pip.conf`\n\n## 暂时\n\n```cpp\npip install*** -i https://pypi.douban.com/simple\n```\n\n## 永久修改内容：\n\n```csharp\n[global]\nindex-url=https://mirrors.aliyun.com/pypi/simple/\n[install]\ntrusted-host=mirrors.aliyun.com\n```\n\n\n\n```csharp\n[global]\ntimeout = 6000\nindex-url = https://pypi.douban.com/simple/ \n[install]\nuse-mirrors = true\nmirrors = https://pypi.douban.com/simple/ \ntrusted-host = pypi.douban.com\n```\n\n# 国内源：\n\n- [http://pypi.douban.com/](https://link.jianshu.com/?t=http://pypi.douban.com/) 豆瓣\n- [http://pypi.hustunique.com/](https://link.jianshu.com/?t=http://pypi.hustunique.com/) 华中理工大学\n- [http://pypi.sdutlinux.org/](https://link.jianshu.com/?t=http://pypi.sdutlinux.org/) 山东理工大学\n- [http://pypi.mirrors.ustc.edu.cn/](https://link.jianshu.com/?t=http://pypi.mirrors.ustc.edu.cn/) 中国科学技术大学\n\n列出当前安装的包：\n\n```python\npip3 list\n```\n\n列出可升级的包：\n\n```python\npip3 list --outdate\n```\n\n升级一个包：\n\n```python\npip3 install --upgrade requests  // mac,linux,unix 在命令前加 sudo -H\n```\n\n升级所有可升级的包：\n\n```python\n$ pip3 freeze --local | grep -v '^-e' | cut -d = -f 1  | xargs -n1 pip3 install -U\n```\n\n```python\npip3 list -o --format legacy|awk '{print $1}'` ; do pip install --upgrade $i; done\n```","source":"_posts/python.pip.md","raw":"# Mac 修改pip 镜像源\n\n1. 进入根目录：`cd ~/`\n2. 进入.pip目录 `cd .pip`\n3. 如果不存在文件夹就新建`mkdir .pip`\n4. 进入 `cd .pip`\n5. 创建pip.conf文件 `touch pip.conf`\n6. 修改：`vim pip.conf`\n\n## 暂时\n\n```cpp\npip install*** -i https://pypi.douban.com/simple\n```\n\n## 永久修改内容：\n\n```csharp\n[global]\nindex-url=https://mirrors.aliyun.com/pypi/simple/\n[install]\ntrusted-host=mirrors.aliyun.com\n```\n\n\n\n```csharp\n[global]\ntimeout = 6000\nindex-url = https://pypi.douban.com/simple/ \n[install]\nuse-mirrors = true\nmirrors = https://pypi.douban.com/simple/ \ntrusted-host = pypi.douban.com\n```\n\n# 国内源：\n\n- [http://pypi.douban.com/](https://link.jianshu.com/?t=http://pypi.douban.com/) 豆瓣\n- [http://pypi.hustunique.com/](https://link.jianshu.com/?t=http://pypi.hustunique.com/) 华中理工大学\n- [http://pypi.sdutlinux.org/](https://link.jianshu.com/?t=http://pypi.sdutlinux.org/) 山东理工大学\n- [http://pypi.mirrors.ustc.edu.cn/](https://link.jianshu.com/?t=http://pypi.mirrors.ustc.edu.cn/) 中国科学技术大学\n\n列出当前安装的包：\n\n```python\npip3 list\n```\n\n列出可升级的包：\n\n```python\npip3 list --outdate\n```\n\n升级一个包：\n\n```python\npip3 install --upgrade requests  // mac,linux,unix 在命令前加 sudo -H\n```\n\n升级所有可升级的包：\n\n```python\n$ pip3 freeze --local | grep -v '^-e' | cut -d = -f 1  | xargs -n1 pip3 install -U\n```\n\n```python\npip3 list -o --format legacy|awk '{print $1}'` ; do pip install --upgrade $i; done\n```","slug":"python.pip","published":1,"date":"2021-02-24T06:18:23.142Z","updated":"2021-02-24T06:36:06.174Z","_id":"cklogmex30000emzi2d6s2u8x","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"mac-修改pip-镜像源\"><a class=\"anchor\" href=\"#mac-修改pip-镜像源\">#</a> Mac 修改 pip 镜像源</h1>\n<ol>\n<li>进入根目录： <code>cd ~/</code></li>\n<li>进入.pip 目录  <code>cd .pip</code></li>\n<li>如果不存在文件夹就新建 <code>mkdir .pip</code></li>\n<li>进入  <code>cd .pip</code></li>\n<li>创建 pip.conf 文件  <code>touch pip.conf</code></li>\n<li>修改： <code>vim pip.conf</code></li>\n</ol>\n<h2 id=\"暂时\"><a class=\"anchor\" href=\"#暂时\">#</a> 暂时</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install*** -i https:<span class=\"comment\">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"永久修改内容\"><a class=\"anchor\" href=\"#永久修改内容\">#</a> 永久修改内容：</h2>\n<p><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">global</span>]</span><br><span class=\"line\">index-url=https:<span class=\"comment\">//mirrors.aliyun.com/pypi/simple/</span></span><br><span class=\"line\">[<span class=\"meta\">install</span>]</span><br><span class=\"line\">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">global</span>]</span><br><span class=\"line\">timeout = <span class=\"number\">6000</span></span><br><span class=\"line\">index-url = https:<span class=\"comment\">//pypi.douban.com/simple/ </span></span><br><span class=\"line\">[<span class=\"meta\">install</span>]</span><br><span class=\"line\">use-mirrors = <span class=\"literal\">true</span></span><br><span class=\"line\">mirrors = https:<span class=\"comment\">//pypi.douban.com/simple/ </span></span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"国内源\"><a class=\"anchor\" href=\"#国内源\">#</a> 国内源：</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLmRvdWJhbi5jb20v\">http://pypi.douban.com/</span> 豆瓣</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLmh1c3R1bmlxdWUuY29tLw==\">http://pypi.hustunique.com/</span> 华中理工大学</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLnNkdXRsaW51eC5vcmcv\">http://pypi.sdutlinux.org/</span> 山东理工大学</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLm1pcnJvcnMudXN0Yy5lZHUuY24v\">http://pypi.mirrors.ustc.edu.cn/</span> 中国科学技术大学</li>\n</ul>\n<p>列出当前安装的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure><br />\n 列出可升级的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span> --outdate</span><br></pre></td></tr></table></figure><br />\n 升级一个包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install --upgrade requests  // mac,linux,unix 在命令前加 sudo -H</span><br></pre></td></tr></table></figure><br />\n 升级所有可升级的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip3 freeze --local | grep -v <span class=\"string\">&#x27;^-e&#x27;</span> | cut -d = -f <span class=\"number\">1</span>  | xargs -n1 pip3 install -U</span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span> -o --<span class=\"built_in\">format</span> legacy|awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>` ; do pip install --upgrade $i; done</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"length":835,"excerpt":"","more":"<h1 id=\"mac-修改pip-镜像源\"><a class=\"anchor\" href=\"#mac-修改pip-镜像源\">#</a> Mac 修改 pip 镜像源</h1>\n<ol>\n<li>进入根目录： <code>cd ~/</code></li>\n<li>进入.pip 目录  <code>cd .pip</code></li>\n<li>如果不存在文件夹就新建 <code>mkdir .pip</code></li>\n<li>进入  <code>cd .pip</code></li>\n<li>创建 pip.conf 文件  <code>touch pip.conf</code></li>\n<li>修改： <code>vim pip.conf</code></li>\n</ol>\n<h2 id=\"暂时\"><a class=\"anchor\" href=\"#暂时\">#</a> 暂时</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install*** -i https:<span class=\"comment\">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"永久修改内容\"><a class=\"anchor\" href=\"#永久修改内容\">#</a> 永久修改内容：</h2>\n<p><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">global</span>]</span><br><span class=\"line\">index-url=https:<span class=\"comment\">//mirrors.aliyun.com/pypi/simple/</span></span><br><span class=\"line\">[<span class=\"meta\">install</span>]</span><br><span class=\"line\">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">global</span>]</span><br><span class=\"line\">timeout = <span class=\"number\">6000</span></span><br><span class=\"line\">index-url = https:<span class=\"comment\">//pypi.douban.com/simple/ </span></span><br><span class=\"line\">[<span class=\"meta\">install</span>]</span><br><span class=\"line\">use-mirrors = <span class=\"literal\">true</span></span><br><span class=\"line\">mirrors = https:<span class=\"comment\">//pypi.douban.com/simple/ </span></span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"国内源\"><a class=\"anchor\" href=\"#国内源\">#</a> 国内源：</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLmRvdWJhbi5jb20v\">http://pypi.douban.com/</span> 豆瓣</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLmh1c3R1bmlxdWUuY29tLw==\">http://pypi.hustunique.com/</span> 华中理工大学</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLnNkdXRsaW51eC5vcmcv\">http://pypi.sdutlinux.org/</span> 山东理工大学</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLm1pcnJvcnMudXN0Yy5lZHUuY24v\">http://pypi.mirrors.ustc.edu.cn/</span> 中国科学技术大学</li>\n</ul>\n<p>列出当前安装的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure><br />\n 列出可升级的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span> --outdate</span><br></pre></td></tr></table></figure><br />\n 升级一个包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install --upgrade requests  // mac,linux,unix 在命令前加 sudo -H</span><br></pre></td></tr></table></figure><br />\n 升级所有可升级的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip3 freeze --local | grep -v <span class=\"string\">&#x27;^-e&#x27;</span> | cut -d = -f <span class=\"number\">1</span>  | xargs -n1 pip3 install -U</span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span> -o --<span class=\"built_in\">format</span> legacy|awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>` ; do pip install --upgrade $i; done</span><br></pre></td></tr></table></figure></p>\n"},{"_content":"# [Mac 上的 MySQL 管理工具 -- Sequel Pro](https://segmentfault.com/a/1190000006255923)\n\nSequel Pro 是 Mac 用户常用的 MySQL 管理软件，属于开源项目 CocoaMySQL 的一个分支。它支持包括索引在内的所有表管理功能，支持MySQL视图，可以同时使用多个窗口来操作多个数据库/表。完全可以媲美大家熟悉的 phpMyadmin。\n\nSequel Pro 的部分特性如下：\n\n1. 操作快速，简单。通过简单的几个参数设定即可连接本地或远程MySQL。\n2. 支持多窗口操作。在不同的个窗口中，对多数据库实施操作。\n3. SQL语句的语法彩色、加亮显示。\n4. SQL语句的关键字、表名、字段名的自动完成。\n5. 支持30多种不同的字符编码。\n6. 快速导入/恢复、导出/备份SQL及CSV格式的数据。\n7. 兼容MySQL3、4、5。\n8. 支持在MAMP/XAMP架构上连接数据库，支持SSH连接模式；\n9. 免费使用，当然，如果你觉得不错，可以 Donate 支持一下作者。\n\n## 通过 root 连接数据库\n\n新建数据库和用户需要用到数据库的 root 用户权限，所以，我们用 root 进行登录，如下图：\n\n![clipboard.png](https://segmentfault.com/img/bVApCt)\n\n## 建立数据库\n\n点击 `Choose Database`-> `Add Database`创建数据库\n\n![clipboard.png](https://segmentfault.com/img/bVApBQ)\n\n字符集选择默认的 `utf-8` 即可。\n\n![clipboard.png](https://segmentfault.com/img/bVApBR)\n\n## 建立数据库用户\n\n点击右上角`User`，弹出下面用户操作对话框，建立 web 用户\n\n![clipboard.png](https://segmentfault.com/img/bVApBU)\n\n给刚才新建的 `laravel` 数据库赋予权限，此处权限全选了，大家也可以有目的的选择权限：\n![clipboard.png](https://segmentfault.com/img/bVApBV)\n\n## 用新建 web 用户连接 laravel 数据库\n\n首先，退出用 root 登陆的 sequel pro，再重新打开。\n\n![clipboard.png](https://segmentfault.com/img/bVApB1)\n\n1. 如果非新建数据库界面，可以点击`1`添加收藏夹，下次可以直接点击该处进行连接；\n2. 默认数据库连接方式为`Standard`标准模式，大家也可以选用`Socket`或`SSH`方式。选好方式，按照提示输入服务器、用户名、密码和数据库名，若端口有修改，输入端口号；\n3. 点`3` `Add to Favorites` 则在`4` 处会新增一个数据库连接收藏，点`Save changes` 则保存到当前收藏；\n4. 点击`5` `Connect`连接数据库。\n\n## 增加、编辑、删除数据表\n\n这部分和 phpMyadmin 等都类似，就不展开来介绍了，大概功能区如下图：\n\n![clipboard.png](https://segmentfault.com/img/bVApB8)\n\n## 删除数据库\n\n貌似没有图形化删除数据库的地方，不过可以在`Query`选项下，执行\n\n```\ndrop database dbname\n```\n\n进行删除，下面以删除 laravel 数据库为例，执行后，状态栏显示无错误，右上角数据库状态回到 `choose database`。点开就会看到已找不到 laravel 数据库。\n\n![clipboard.png](https://segmentfault.com/img/bVApBP)\n\n## 用 laravel 的 artisan 工具建立和更新数据表\n\n### laravel 连接配置\n\n找到项目 `.env` 文件，修改下面几个参数\n\n![clipboard.png](https://segmentfault.com/img/bVApCj)\n\n### migrate 文件编辑\n\n找到 database/migrations 目录，查看或编辑目录下的 migrate 文件\n\n![clipboard.png](https://segmentfault.com/img/bVApCk)\n\n一般内容如下所示，调整为你需要的内容即可：\n\n![clipboard.png](https://segmentfault.com/img/bVApCm)\n\n### 命令行执行 migrate 操作\n\n命令行模式进入项目根目录，执行下面命令，则数据库就会按照几个 migrate 文件要求，执行数据库操作。\n\n```\nphp artisan migrate\n```\n\n### 数据库查看 migrate 命令执行结果\n\n我们用 sequel pro 连接数据库，可以看到操作后如下：\n\n![clipboard.png](https://segmentfault.com/img/bVApCo)\n\n可见数据库和用户建立成功，项目已能正常连接数据库。\n\n## 答用户问\n\n### 如何调整主键\n\n点到 Query 选项卡\n\n#### 1. 如果原先没有主键，且需要增加的字段为 not null，可以执行下列命令\n\n```\nALTER TABLE `users` ADD PRIMARY KEY ( `name` )\n```\n\n#### 2. 如果原先主键已存在，目的是改变主键，则执行如下步骤\n\n- 如果原主键有外键依赖，要先删除外键依赖；\n\n```\nalter table `FK_Table` drop foreign key FK_Name;（FK_Table 为有外键关系的表，FK_Name 为外键约束名）\n```\n\n- 如果原主键为自动递增，要先去掉自动递增：\n\n```\nalter table `users` modify `id` int(10) unsigned NOT NULL;（根据实际字段属性来）\n```\n\n- 再删除主键\n\n```\nalter table `users` drop primary key;\n```\n\n- 然后再增加主键\n\n```\nalter table `users` add primary key(`name`);\n```\n\n[mysql](https://segmentfault.com/t/mysql)","source":"_posts/mysql管理软件.md","raw":"# [Mac 上的 MySQL 管理工具 -- Sequel Pro](https://segmentfault.com/a/1190000006255923)\n\nSequel Pro 是 Mac 用户常用的 MySQL 管理软件，属于开源项目 CocoaMySQL 的一个分支。它支持包括索引在内的所有表管理功能，支持MySQL视图，可以同时使用多个窗口来操作多个数据库/表。完全可以媲美大家熟悉的 phpMyadmin。\n\nSequel Pro 的部分特性如下：\n\n1. 操作快速，简单。通过简单的几个参数设定即可连接本地或远程MySQL。\n2. 支持多窗口操作。在不同的个窗口中，对多数据库实施操作。\n3. SQL语句的语法彩色、加亮显示。\n4. SQL语句的关键字、表名、字段名的自动完成。\n5. 支持30多种不同的字符编码。\n6. 快速导入/恢复、导出/备份SQL及CSV格式的数据。\n7. 兼容MySQL3、4、5。\n8. 支持在MAMP/XAMP架构上连接数据库，支持SSH连接模式；\n9. 免费使用，当然，如果你觉得不错，可以 Donate 支持一下作者。\n\n## 通过 root 连接数据库\n\n新建数据库和用户需要用到数据库的 root 用户权限，所以，我们用 root 进行登录，如下图：\n\n![clipboard.png](https://segmentfault.com/img/bVApCt)\n\n## 建立数据库\n\n点击 `Choose Database`-> `Add Database`创建数据库\n\n![clipboard.png](https://segmentfault.com/img/bVApBQ)\n\n字符集选择默认的 `utf-8` 即可。\n\n![clipboard.png](https://segmentfault.com/img/bVApBR)\n\n## 建立数据库用户\n\n点击右上角`User`，弹出下面用户操作对话框，建立 web 用户\n\n![clipboard.png](https://segmentfault.com/img/bVApBU)\n\n给刚才新建的 `laravel` 数据库赋予权限，此处权限全选了，大家也可以有目的的选择权限：\n![clipboard.png](https://segmentfault.com/img/bVApBV)\n\n## 用新建 web 用户连接 laravel 数据库\n\n首先，退出用 root 登陆的 sequel pro，再重新打开。\n\n![clipboard.png](https://segmentfault.com/img/bVApB1)\n\n1. 如果非新建数据库界面，可以点击`1`添加收藏夹，下次可以直接点击该处进行连接；\n2. 默认数据库连接方式为`Standard`标准模式，大家也可以选用`Socket`或`SSH`方式。选好方式，按照提示输入服务器、用户名、密码和数据库名，若端口有修改，输入端口号；\n3. 点`3` `Add to Favorites` 则在`4` 处会新增一个数据库连接收藏，点`Save changes` 则保存到当前收藏；\n4. 点击`5` `Connect`连接数据库。\n\n## 增加、编辑、删除数据表\n\n这部分和 phpMyadmin 等都类似，就不展开来介绍了，大概功能区如下图：\n\n![clipboard.png](https://segmentfault.com/img/bVApB8)\n\n## 删除数据库\n\n貌似没有图形化删除数据库的地方，不过可以在`Query`选项下，执行\n\n```\ndrop database dbname\n```\n\n进行删除，下面以删除 laravel 数据库为例，执行后，状态栏显示无错误，右上角数据库状态回到 `choose database`。点开就会看到已找不到 laravel 数据库。\n\n![clipboard.png](https://segmentfault.com/img/bVApBP)\n\n## 用 laravel 的 artisan 工具建立和更新数据表\n\n### laravel 连接配置\n\n找到项目 `.env` 文件，修改下面几个参数\n\n![clipboard.png](https://segmentfault.com/img/bVApCj)\n\n### migrate 文件编辑\n\n找到 database/migrations 目录，查看或编辑目录下的 migrate 文件\n\n![clipboard.png](https://segmentfault.com/img/bVApCk)\n\n一般内容如下所示，调整为你需要的内容即可：\n\n![clipboard.png](https://segmentfault.com/img/bVApCm)\n\n### 命令行执行 migrate 操作\n\n命令行模式进入项目根目录，执行下面命令，则数据库就会按照几个 migrate 文件要求，执行数据库操作。\n\n```\nphp artisan migrate\n```\n\n### 数据库查看 migrate 命令执行结果\n\n我们用 sequel pro 连接数据库，可以看到操作后如下：\n\n![clipboard.png](https://segmentfault.com/img/bVApCo)\n\n可见数据库和用户建立成功，项目已能正常连接数据库。\n\n## 答用户问\n\n### 如何调整主键\n\n点到 Query 选项卡\n\n#### 1. 如果原先没有主键，且需要增加的字段为 not null，可以执行下列命令\n\n```\nALTER TABLE `users` ADD PRIMARY KEY ( `name` )\n```\n\n#### 2. 如果原先主键已存在，目的是改变主键，则执行如下步骤\n\n- 如果原主键有外键依赖，要先删除外键依赖；\n\n```\nalter table `FK_Table` drop foreign key FK_Name;（FK_Table 为有外键关系的表，FK_Name 为外键约束名）\n```\n\n- 如果原主键为自动递增，要先去掉自动递增：\n\n```\nalter table `users` modify `id` int(10) unsigned NOT NULL;（根据实际字段属性来）\n```\n\n- 再删除主键\n\n```\nalter table `users` drop primary key;\n```\n\n- 然后再增加主键\n\n```\nalter table `users` add primary key(`name`);\n```\n\n[mysql](https://segmentfault.com/t/mysql)","slug":"mysql管理软件","published":1,"date":"2021-02-24T08:15:48.313Z","updated":"2021-02-24T08:16:12.036Z","_id":"cklogmex60001emzie9if8olm","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"mac-上的-mysql-管理工具-sequel-pro\"><a class=\"anchor\" href=\"#mac-上的-mysql-管理工具-sequel-pro\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNjI1NTkyMw==\">Mac 上的 MySQL 管理工具 -- Sequel Pro</span></h1>\n<p>Sequel Pro 是 Mac 用户常用的 MySQL 管理软件，属于开源项目 CocoaMySQL 的一个分支。它支持包括索引在内的所有表管理功能，支持 MySQL 视图，可以同时使用多个窗口来操作多个数据库 / 表。完全可以媲美大家熟悉的 phpMyadmin。</p>\n<p>Sequel Pro 的部分特性如下：</p>\n<ol>\n<li>操作快速，简单。通过简单的几个参数设定即可连接本地或远程 MySQL。</li>\n<li>支持多窗口操作。在不同的个窗口中，对多数据库实施操作。</li>\n<li>SQL 语句的语法彩色、加亮显示。</li>\n<li>SQL 语句的关键字、表名、字段名的自动完成。</li>\n<li>支持 30 多种不同的字符编码。</li>\n<li>快速导入 / 恢复、导出 / 备份 SQL 及 CSV 格式的数据。</li>\n<li>兼容 MySQL3、4、5。</li>\n<li>支持在 MAMP/XAMP 架构上连接数据库，支持 SSH 连接模式；</li>\n<li>免费使用，当然，如果你觉得不错，可以 Donate 支持一下作者。</li>\n</ol>\n<h2 id=\"通过-root-连接数据库\"><a class=\"anchor\" href=\"#通过-root-连接数据库\">#</a> 通过 root 连接数据库</h2>\n<p>新建数据库和用户需要用到数据库的 root 用户权限，所以，我们用 root 进行登录，如下图：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCt\" alt=\"clipboard.png\" /></p>\n<h2 id=\"建立数据库\"><a class=\"anchor\" href=\"#建立数据库\">#</a> 建立数据库</h2>\n<p>点击  <code>Choose Database</code> -&gt;  <code>Add Database</code>  创建数据库</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBQ\" alt=\"clipboard.png\" /></p>\n<p>字符集选择默认的  <code>utf-8</code>  即可。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBR\" alt=\"clipboard.png\" /></p>\n<h2 id=\"建立数据库用户\"><a class=\"anchor\" href=\"#建立数据库用户\">#</a> 建立数据库用户</h2>\n<p>点击右上角 <code>User</code> ，弹出下面用户操作对话框，建立 web 用户</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBU\" alt=\"clipboard.png\" /></p>\n<p>给刚才新建的  <code>laravel</code>  数据库赋予权限，此处权限全选了，大家也可以有目的的选择权限：<br />\n<img data-src=\"https://segmentfault.com/img/bVApBV\" alt=\"clipboard.png\" /></p>\n<h2 id=\"用新建-web-用户连接-laravel-数据库\"><a class=\"anchor\" href=\"#用新建-web-用户连接-laravel-数据库\">#</a> 用新建 web 用户连接 laravel 数据库</h2>\n<p>首先，退出用 root 登陆的 sequel pro，再重新打开。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApB1\" alt=\"clipboard.png\" /></p>\n<ol>\n<li>如果非新建数据库界面，可以点击 <code>1</code>  添加收藏夹，下次可以直接点击该处进行连接；</li>\n<li>默认数据库连接方式为 <code>Standard</code>  标准模式，大家也可以选用 <code>Socket</code>  或 <code>SSH</code>  方式。选好方式，按照提示输入服务器、用户名、密码和数据库名，若端口有修改，输入端口号；</li>\n<li>点 <code>3</code>   <code>Add to Favorites</code>  则在 <code>4</code>  处会新增一个数据库连接收藏，点 <code>Save changes</code>  则保存到当前收藏；</li>\n<li>点击 <code>5</code>   <code>Connect</code>  连接数据库。</li>\n</ol>\n<h2 id=\"增加-编辑-删除数据表\"><a class=\"anchor\" href=\"#增加-编辑-删除数据表\">#</a> 增加、编辑、删除数据表</h2>\n<p>这部分和 phpMyadmin 等都类似，就不展开来介绍了，大概功能区如下图：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApB8\" alt=\"clipboard.png\" /></p>\n<h2 id=\"删除数据库\"><a class=\"anchor\" href=\"#删除数据库\">#</a> 删除数据库</h2>\n<p>貌似没有图形化删除数据库的地方，不过可以在 <code>Query</code>  选项下，执行</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop database dbname</span><br></pre></td></tr></table></figure><br />\n 进行删除，下面以删除 laravel 数据库为例，执行后，状态栏显示无错误，右上角数据库状态回到  <code>choose database</code> 。点开就会看到已找不到 laravel 数据库。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBP\" alt=\"clipboard.png\" /></p>\n<h2 id=\"用-laravel-的-artisan-工具建立和更新数据表\"><a class=\"anchor\" href=\"#用-laravel-的-artisan-工具建立和更新数据表\">#</a> 用 laravel 的 artisan 工具建立和更新数据表</h2>\n<h3 id=\"laravel-连接配置\"><a class=\"anchor\" href=\"#laravel-连接配置\">#</a> laravel 连接配置</h3>\n<p>找到项目  <code>.env</code>  文件，修改下面几个参数</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCj\" alt=\"clipboard.png\" /></p>\n<h3 id=\"migrate-文件编辑\"><a class=\"anchor\" href=\"#migrate-文件编辑\">#</a> migrate 文件编辑</h3>\n<p>找到 database/migrations 目录，查看或编辑目录下的 migrate 文件</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCk\" alt=\"clipboard.png\" /></p>\n<p>一般内容如下所示，调整为你需要的内容即可：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCm\" alt=\"clipboard.png\" /></p>\n<h3 id=\"命令行执行-migrate-操作\"><a class=\"anchor\" href=\"#命令行执行-migrate-操作\">#</a> 命令行执行 migrate 操作</h3>\n<p>命令行模式进入项目根目录，执行下面命令，则数据库就会按照几个 migrate 文件要求，执行数据库操作。</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据库查看-migrate-命令执行结果\"><a class=\"anchor\" href=\"#数据库查看-migrate-命令执行结果\">#</a> 数据库查看 migrate 命令执行结果</h3>\n<p>我们用 sequel pro 连接数据库，可以看到操作后如下：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCo\" alt=\"clipboard.png\" /></p>\n<p>可见数据库和用户建立成功，项目已能正常连接数据库。</p>\n<h2 id=\"答用户问\"><a class=\"anchor\" href=\"#答用户问\">#</a> 答用户问</h2>\n<h3 id=\"如何调整主键\"><a class=\"anchor\" href=\"#如何调整主键\">#</a> 如何调整主键</h3>\n<p>点到 Query 选项卡</p>\n<h4 id=\"1-如果原先没有主键且需要增加的字段为-not-null可以执行下列命令\"><a class=\"anchor\" href=\"#1-如果原先没有主键且需要增加的字段为-not-null可以执行下列命令\">#</a> 1. 如果原先没有主键，且需要增加的字段为 not null，可以执行下列命令</h4>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE &#96;users&#96; ADD PRIMARY KEY ( &#96;name&#96; )</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-如果原先主键已存在目的是改变主键则执行如下步骤\"><a class=\"anchor\" href=\"#2-如果原先主键已存在目的是改变主键则执行如下步骤\">#</a> 2. 如果原先主键已存在，目的是改变主键，则执行如下步骤</h4>\n<ul>\n<li>如果原主键有外键依赖，要先删除外键依赖；</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;FK_Table&#96; drop foreign key FK_Name;（FK_Table 为有外键关系的表，FK_Name 为外键约束名）</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>如果原主键为自动递增，要先去掉自动递增：</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; modify &#96;id&#96; int(10) unsigned NOT NULL;（根据实际字段属性来）</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>再删除主键</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; drop primary key;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>然后再增加主键</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; add primary key(&#96;name&#96;);</span><br></pre></td></tr></table></figure><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3QvbXlzcWw=\">mysql</span></p>\n","site":{"data":{}},"length":1746,"excerpt":"","more":"<h1 id=\"mac-上的-mysql-管理工具-sequel-pro\"><a class=\"anchor\" href=\"#mac-上的-mysql-管理工具-sequel-pro\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNjI1NTkyMw==\">Mac 上的 MySQL 管理工具 -- Sequel Pro</span></h1>\n<p>Sequel Pro 是 Mac 用户常用的 MySQL 管理软件，属于开源项目 CocoaMySQL 的一个分支。它支持包括索引在内的所有表管理功能，支持 MySQL 视图，可以同时使用多个窗口来操作多个数据库 / 表。完全可以媲美大家熟悉的 phpMyadmin。</p>\n<p>Sequel Pro 的部分特性如下：</p>\n<ol>\n<li>操作快速，简单。通过简单的几个参数设定即可连接本地或远程 MySQL。</li>\n<li>支持多窗口操作。在不同的个窗口中，对多数据库实施操作。</li>\n<li>SQL 语句的语法彩色、加亮显示。</li>\n<li>SQL 语句的关键字、表名、字段名的自动完成。</li>\n<li>支持 30 多种不同的字符编码。</li>\n<li>快速导入 / 恢复、导出 / 备份 SQL 及 CSV 格式的数据。</li>\n<li>兼容 MySQL3、4、5。</li>\n<li>支持在 MAMP/XAMP 架构上连接数据库，支持 SSH 连接模式；</li>\n<li>免费使用，当然，如果你觉得不错，可以 Donate 支持一下作者。</li>\n</ol>\n<h2 id=\"通过-root-连接数据库\"><a class=\"anchor\" href=\"#通过-root-连接数据库\">#</a> 通过 root 连接数据库</h2>\n<p>新建数据库和用户需要用到数据库的 root 用户权限，所以，我们用 root 进行登录，如下图：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCt\" alt=\"clipboard.png\" /></p>\n<h2 id=\"建立数据库\"><a class=\"anchor\" href=\"#建立数据库\">#</a> 建立数据库</h2>\n<p>点击  <code>Choose Database</code> -&gt;  <code>Add Database</code>  创建数据库</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBQ\" alt=\"clipboard.png\" /></p>\n<p>字符集选择默认的  <code>utf-8</code>  即可。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBR\" alt=\"clipboard.png\" /></p>\n<h2 id=\"建立数据库用户\"><a class=\"anchor\" href=\"#建立数据库用户\">#</a> 建立数据库用户</h2>\n<p>点击右上角 <code>User</code> ，弹出下面用户操作对话框，建立 web 用户</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBU\" alt=\"clipboard.png\" /></p>\n<p>给刚才新建的  <code>laravel</code>  数据库赋予权限，此处权限全选了，大家也可以有目的的选择权限：<br />\n<img data-src=\"https://segmentfault.com/img/bVApBV\" alt=\"clipboard.png\" /></p>\n<h2 id=\"用新建-web-用户连接-laravel-数据库\"><a class=\"anchor\" href=\"#用新建-web-用户连接-laravel-数据库\">#</a> 用新建 web 用户连接 laravel 数据库</h2>\n<p>首先，退出用 root 登陆的 sequel pro，再重新打开。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApB1\" alt=\"clipboard.png\" /></p>\n<ol>\n<li>如果非新建数据库界面，可以点击 <code>1</code>  添加收藏夹，下次可以直接点击该处进行连接；</li>\n<li>默认数据库连接方式为 <code>Standard</code>  标准模式，大家也可以选用 <code>Socket</code>  或 <code>SSH</code>  方式。选好方式，按照提示输入服务器、用户名、密码和数据库名，若端口有修改，输入端口号；</li>\n<li>点 <code>3</code>   <code>Add to Favorites</code>  则在 <code>4</code>  处会新增一个数据库连接收藏，点 <code>Save changes</code>  则保存到当前收藏；</li>\n<li>点击 <code>5</code>   <code>Connect</code>  连接数据库。</li>\n</ol>\n<h2 id=\"增加-编辑-删除数据表\"><a class=\"anchor\" href=\"#增加-编辑-删除数据表\">#</a> 增加、编辑、删除数据表</h2>\n<p>这部分和 phpMyadmin 等都类似，就不展开来介绍了，大概功能区如下图：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApB8\" alt=\"clipboard.png\" /></p>\n<h2 id=\"删除数据库\"><a class=\"anchor\" href=\"#删除数据库\">#</a> 删除数据库</h2>\n<p>貌似没有图形化删除数据库的地方，不过可以在 <code>Query</code>  选项下，执行</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop database dbname</span><br></pre></td></tr></table></figure><br />\n 进行删除，下面以删除 laravel 数据库为例，执行后，状态栏显示无错误，右上角数据库状态回到  <code>choose database</code> 。点开就会看到已找不到 laravel 数据库。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBP\" alt=\"clipboard.png\" /></p>\n<h2 id=\"用-laravel-的-artisan-工具建立和更新数据表\"><a class=\"anchor\" href=\"#用-laravel-的-artisan-工具建立和更新数据表\">#</a> 用 laravel 的 artisan 工具建立和更新数据表</h2>\n<h3 id=\"laravel-连接配置\"><a class=\"anchor\" href=\"#laravel-连接配置\">#</a> laravel 连接配置</h3>\n<p>找到项目  <code>.env</code>  文件，修改下面几个参数</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCj\" alt=\"clipboard.png\" /></p>\n<h3 id=\"migrate-文件编辑\"><a class=\"anchor\" href=\"#migrate-文件编辑\">#</a> migrate 文件编辑</h3>\n<p>找到 database/migrations 目录，查看或编辑目录下的 migrate 文件</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCk\" alt=\"clipboard.png\" /></p>\n<p>一般内容如下所示，调整为你需要的内容即可：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCm\" alt=\"clipboard.png\" /></p>\n<h3 id=\"命令行执行-migrate-操作\"><a class=\"anchor\" href=\"#命令行执行-migrate-操作\">#</a> 命令行执行 migrate 操作</h3>\n<p>命令行模式进入项目根目录，执行下面命令，则数据库就会按照几个 migrate 文件要求，执行数据库操作。</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据库查看-migrate-命令执行结果\"><a class=\"anchor\" href=\"#数据库查看-migrate-命令执行结果\">#</a> 数据库查看 migrate 命令执行结果</h3>\n<p>我们用 sequel pro 连接数据库，可以看到操作后如下：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCo\" alt=\"clipboard.png\" /></p>\n<p>可见数据库和用户建立成功，项目已能正常连接数据库。</p>\n<h2 id=\"答用户问\"><a class=\"anchor\" href=\"#答用户问\">#</a> 答用户问</h2>\n<h3 id=\"如何调整主键\"><a class=\"anchor\" href=\"#如何调整主键\">#</a> 如何调整主键</h3>\n<p>点到 Query 选项卡</p>\n<h4 id=\"1-如果原先没有主键且需要增加的字段为-not-null可以执行下列命令\"><a class=\"anchor\" href=\"#1-如果原先没有主键且需要增加的字段为-not-null可以执行下列命令\">#</a> 1. 如果原先没有主键，且需要增加的字段为 not null，可以执行下列命令</h4>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE &#96;users&#96; ADD PRIMARY KEY ( &#96;name&#96; )</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-如果原先主键已存在目的是改变主键则执行如下步骤\"><a class=\"anchor\" href=\"#2-如果原先主键已存在目的是改变主键则执行如下步骤\">#</a> 2. 如果原先主键已存在，目的是改变主键，则执行如下步骤</h4>\n<ul>\n<li>如果原主键有外键依赖，要先删除外键依赖；</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;FK_Table&#96; drop foreign key FK_Name;（FK_Table 为有外键关系的表，FK_Name 为外键约束名）</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>如果原主键为自动递增，要先去掉自动递增：</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; modify &#96;id&#96; int(10) unsigned NOT NULL;（根据实际字段属性来）</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>再删除主键</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; drop primary key;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>然后再增加主键</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; add primary key(&#96;name&#96;);</span><br></pre></td></tr></table></figure><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3QvbXlzcWw=\">mysql</span></p>\n"},{"_content":"# 用hexo搭建一个静态站点\n\n### 1.下载必须文件\n\nA.[nodejs](https://nodejs.org/en/)\nB.[git](http://git-scm.com/)\nC.hexo\n\n```bash\n$ npm install -g hexo-cli\n```\n\n### 2.创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\n\n第一步：\n\n```bash\n$ hexo init\t\t\t#初始化文件夹\n```\n\n第二步：\n\n```bash\n$ hexo g      \t#编译文件\n$ hexo s\t\t\t\t#本地部署\n$ hexo d\t\t\t\t#部署网页\n$ hexo server\t\t#本地部署但不生成文件可修改看变化\n$ hexo clean\t\t#清除垃圾文件\n```\n\n### 3.部署\n\nA.部署到服务器\n\n```bash\nyum install gcc -y\t\t\t\t\t\t\t  #先安装好 Nginx安装环境\nyum install pcre pcre-devel -y\nyum install zlib zlib-devel -y  \n```\n\n```bash\nwget http://nginx.org/download/nginx-1.16.0.tar.gz      #下载\ntar zxvf nginx-1.16.0.tar.gz\ncd nginx-1.16.0./configure --prefix=/usr/local/nginx \n\n```\n\n```bash\n./configure --prefix=/usr/local/nginx #编译\n```\n\n```bash\nmake && make install  #安装   \n```\n\n```bash\ncd /usr/local/nginx/sbin/./nginx B.  #启动 nginx\n```\n\n```bash\nnpm install hexo-deployer-sftp --save  #首先得在 hexo 目录下安装 sftp 插件\n```\n\n```yaml\ndeploy:\n  type: \"sftp\"\n  host: \"192.168.0.100\"\n  user: \"root\"\n  pass: \"123456\"\n  remotePath: \"/usr/local/nginx/html\"\n  port: 22 \t\t\n  ###然后在 _config.yml 中配置 deploy\n```\n\nB.部署到[GitHub](www.github.com)\n\n```bash\nnpm install hexo-deployer-git --save  #先添加 git 插件\n```\n\n```yaml\ndeploy:\n  type: \"git\"\n  repo: \"https://github.com/ITAbyss/itabyss.github.io.git\"\n  branch: \"master\"\n```\n\n","source":"_posts/hexo/hexo简介.md","raw":"# 用hexo搭建一个静态站点\n\n### 1.下载必须文件\n\nA.[nodejs](https://nodejs.org/en/)\nB.[git](http://git-scm.com/)\nC.hexo\n\n```bash\n$ npm install -g hexo-cli\n```\n\n### 2.创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\n\n第一步：\n\n```bash\n$ hexo init\t\t\t#初始化文件夹\n```\n\n第二步：\n\n```bash\n$ hexo g      \t#编译文件\n$ hexo s\t\t\t\t#本地部署\n$ hexo d\t\t\t\t#部署网页\n$ hexo server\t\t#本地部署但不生成文件可修改看变化\n$ hexo clean\t\t#清除垃圾文件\n```\n\n### 3.部署\n\nA.部署到服务器\n\n```bash\nyum install gcc -y\t\t\t\t\t\t\t  #先安装好 Nginx安装环境\nyum install pcre pcre-devel -y\nyum install zlib zlib-devel -y  \n```\n\n```bash\nwget http://nginx.org/download/nginx-1.16.0.tar.gz      #下载\ntar zxvf nginx-1.16.0.tar.gz\ncd nginx-1.16.0./configure --prefix=/usr/local/nginx \n\n```\n\n```bash\n./configure --prefix=/usr/local/nginx #编译\n```\n\n```bash\nmake && make install  #安装   \n```\n\n```bash\ncd /usr/local/nginx/sbin/./nginx B.  #启动 nginx\n```\n\n```bash\nnpm install hexo-deployer-sftp --save  #首先得在 hexo 目录下安装 sftp 插件\n```\n\n```yaml\ndeploy:\n  type: \"sftp\"\n  host: \"192.168.0.100\"\n  user: \"root\"\n  pass: \"123456\"\n  remotePath: \"/usr/local/nginx/html\"\n  port: 22 \t\t\n  ###然后在 _config.yml 中配置 deploy\n```\n\nB.部署到[GitHub](www.github.com)\n\n```bash\nnpm install hexo-deployer-git --save  #先添加 git 插件\n```\n\n```yaml\ndeploy:\n  type: \"git\"\n  repo: \"https://github.com/ITAbyss/itabyss.github.io.git\"\n  branch: \"master\"\n```\n\n","slug":"hexo/hexo简介","published":1,"date":"2021-02-23T05:17:45.825Z","updated":"2021-02-28T01:46:49.345Z","_id":"ckloht2wi0000pxzi8stqcjdb","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"用hexo搭建一个静态站点\"><a class=\"markdownIt-Anchor\" href=\"#用hexo搭建一个静态站点\">#</a> 用 hexo 搭建一个静态站点</h1>\n<h3 id=\"1下载必须文件\"><a class=\"markdownIt-Anchor\" href=\"#1下载必须文件\">#</a> 1. 下载必须文件</h3>\n<p>A.<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\">nodejs</span><br>\nB.<span class=\"exturl\" data-url=\"aHR0cDovL2dpdC1zY20uY29tLw==\">git</span><br>\nC.hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"2创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\"><a class=\"markdownIt-Anchor\" href=\"#2创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\">#</a> 2. 创建一个文件夹并在此文件夹中打开终端初始化 hexo 创建网页</h3>\n<p>第一步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init\t\t\t<span class=\"comment\">#初始化文件夹</span></span><br></pre></td></tr></table></figure>\n<p>第二步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g      \t<span class=\"comment\">#编译文件</span></span><br><span class=\"line\">$ hexo s\t\t\t\t<span class=\"comment\">#本地部署</span></span><br><span class=\"line\">$ hexo d\t\t\t\t<span class=\"comment\">#部署网页</span></span><br><span class=\"line\">$ hexo server\t\t<span class=\"comment\">#本地部署但不生成文件可修改看变化</span></span><br><span class=\"line\">$ hexo clean\t\t<span class=\"comment\">#清除垃圾文件</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3部署\"><a class=\"markdownIt-Anchor\" href=\"#3部署\">#</a> 3. 部署</h3>\n<p>A. 部署到服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc -y\t\t\t\t\t\t\t  <span class=\"comment\">#先安装好 Nginx安装环境</span></span><br><span class=\"line\">yum install pcre pcre-devel -y</span><br><span class=\"line\">yum install zlib zlib-devel -y  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.16.0.tar.gz      <span class=\"comment\">#下载</span></span><br><span class=\"line\">tar zxvf nginx-1.16.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.16.0./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx <span class=\"comment\">#编译</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install  <span class=\"comment\">#安装   </span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin/./nginx B.  <span class=\"comment\">#启动 nginx</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-sftp --save  <span class=\"comment\">#首先得在 hexo 目录下安装 sftp 插件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&quot;sftp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">&quot;192.168.0.100&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span> <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">pass:</span> <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">remotePath:</span> <span class=\"string\">&quot;/usr/local/nginx/html&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">22</span> \t\t</span><br><span class=\"line\">  <span class=\"comment\">###然后在 _config.yml 中配置 deploy</span></span><br></pre></td></tr></table></figure>\n<p>B. 部署到<a href=\"www.github.com\"> GitHub</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save  <span class=\"comment\">#先添加 git 插件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&quot;git&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&quot;https://github.com/ITAbyss/itabyss.github.io.git&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">&quot;master&quot;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":961,"excerpt":"","more":"<h1 id=\"用hexo搭建一个静态站点\"><a class=\"markdownIt-Anchor\" href=\"#用hexo搭建一个静态站点\">#</a> 用 hexo 搭建一个静态站点</h1>\n<h3 id=\"1下载必须文件\"><a class=\"markdownIt-Anchor\" href=\"#1下载必须文件\">#</a> 1. 下载必须文件</h3>\n<p>A.<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\">nodejs</span><br>\nB.<span class=\"exturl\" data-url=\"aHR0cDovL2dpdC1zY20uY29tLw==\">git</span><br>\nC.hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"2创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\"><a class=\"markdownIt-Anchor\" href=\"#2创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\">#</a> 2. 创建一个文件夹并在此文件夹中打开终端初始化 hexo 创建网页</h3>\n<p>第一步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init\t\t\t<span class=\"comment\">#初始化文件夹</span></span><br></pre></td></tr></table></figure>\n<p>第二步：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g      \t<span class=\"comment\">#编译文件</span></span><br><span class=\"line\">$ hexo s\t\t\t\t<span class=\"comment\">#本地部署</span></span><br><span class=\"line\">$ hexo d\t\t\t\t<span class=\"comment\">#部署网页</span></span><br><span class=\"line\">$ hexo server\t\t<span class=\"comment\">#本地部署但不生成文件可修改看变化</span></span><br><span class=\"line\">$ hexo clean\t\t<span class=\"comment\">#清除垃圾文件</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3部署\"><a class=\"markdownIt-Anchor\" href=\"#3部署\">#</a> 3. 部署</h3>\n<p>A. 部署到服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc -y\t\t\t\t\t\t\t  <span class=\"comment\">#先安装好 Nginx安装环境</span></span><br><span class=\"line\">yum install pcre pcre-devel -y</span><br><span class=\"line\">yum install zlib zlib-devel -y  </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.16.0.tar.gz      <span class=\"comment\">#下载</span></span><br><span class=\"line\">tar zxvf nginx-1.16.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.16.0./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx <span class=\"comment\">#编译</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install  <span class=\"comment\">#安装   </span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin/./nginx B.  <span class=\"comment\">#启动 nginx</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-sftp --save  <span class=\"comment\">#首先得在 hexo 目录下安装 sftp 插件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&quot;sftp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">&quot;192.168.0.100&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span> <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">pass:</span> <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">remotePath:</span> <span class=\"string\">&quot;/usr/local/nginx/html&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">22</span> \t\t</span><br><span class=\"line\">  <span class=\"comment\">###然后在 _config.yml 中配置 deploy</span></span><br></pre></td></tr></table></figure>\n<p>B. 部署到<a href=\"www.github.com\"> GitHub</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save  <span class=\"comment\">#先添加 git 插件</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&quot;git&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&quot;https://github.com/ITAbyss/itabyss.github.io.git&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">&quot;master&quot;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"第1周 计算","date":"2020-04-12T12:46:25.000Z","_content":"\n\n# hexo主题开发\n\n### 1.hexo 结构\n\n```yaml\n├── _config.yml       // 总体的配置文件\n├── node_modules      // NodeJs 所依赖的包，后期也可以自己添加插件\n├── package-lock.json // 支持 hexo 运行的 NodeJs 包\n├── package.json      // 自定义的 NodeJs 包\n├── scaffolds         // Hexo Markdown 加载时的关键字，如data,title等,它会在启动的时候默认加载\n├── source            // md 源文件目录\n└── themes            // 主题文件夹\n    └── landscape     // 默认主题     \n```\n\n\n\n### 2.主题结构\n\n```\n    └── bg\t                // 自建的主题目录\n        ├── _config.yml     // 主题配置文件\n        ├── layout          // 主要构造 html 的模板\n        │   ├── index.ejs   // 主页模板\n        │   ├── layout.ejs  // 布局模板\n        │   └── post.ejs    // md 编译成 html 后的文件模板\n        └── source          // 静态资源文件目录\n            ├── css         // css 样式目录\n            └── js          // JavaScript 脚本目录\n```\n\n\n\n### 3.\n\n### 4.\n\n### 5.\n\n### 6.\n\n### 7.\n\n### 8.\n\n### 9.\n显示Mac隐藏文件的命令\n\ndefaults write com.apple.finder AppleShowAllFiles -bool true\nkillall Finder\n\n隐藏Mac隐藏文件的命令\ndefaults write com.apple.finder AppleShowAllFiles -bool false\nkillall Finder","source":"_posts/hexo/hexo/主题开发.md","raw":"---\ntitle: 第1周 计算\ndate: 2020/04/12 20:46:25\ncategories:\n- [博客, Java,零基础学Java语言-浙江大学-翁恺]\ntags:\n---\n\n\n# hexo主题开发\n\n### 1.hexo 结构\n\n```yaml\n├── _config.yml       // 总体的配置文件\n├── node_modules      // NodeJs 所依赖的包，后期也可以自己添加插件\n├── package-lock.json // 支持 hexo 运行的 NodeJs 包\n├── package.json      // 自定义的 NodeJs 包\n├── scaffolds         // Hexo Markdown 加载时的关键字，如data,title等,它会在启动的时候默认加载\n├── source            // md 源文件目录\n└── themes            // 主题文件夹\n    └── landscape     // 默认主题     \n```\n\n\n\n### 2.主题结构\n\n```\n    └── bg\t                // 自建的主题目录\n        ├── _config.yml     // 主题配置文件\n        ├── layout          // 主要构造 html 的模板\n        │   ├── index.ejs   // 主页模板\n        │   ├── layout.ejs  // 布局模板\n        │   └── post.ejs    // md 编译成 html 后的文件模板\n        └── source          // 静态资源文件目录\n            ├── css         // css 样式目录\n            └── js          // JavaScript 脚本目录\n```\n\n\n\n### 3.\n\n### 4.\n\n### 5.\n\n### 6.\n\n### 7.\n\n### 8.\n\n### 9.\n显示Mac隐藏文件的命令\n\ndefaults write com.apple.finder AppleShowAllFiles -bool true\nkillall Finder\n\n隐藏Mac隐藏文件的命令\ndefaults write com.apple.finder AppleShowAllFiles -bool false\nkillall Finder","slug":"hexo/hexo/主题开发","published":1,"updated":"2021-02-28T02:12:04.147Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckloirl3o0000okzi7ke860t7","content":"<h1 id=\"hexo主题开发\"><a class=\"markdownIt-Anchor\" href=\"#hexo主题开发\">#</a> hexo 主题开发</h1>\n<h3 id=\"1hexo-结构\"><a class=\"markdownIt-Anchor\" href=\"#1hexo-结构\">#</a> 1.hexo 结构</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├── _config.yml       // 总体的配置文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>├── node_modules      // NodeJs 所依赖的包，后期也可以自己添加插件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>├── package<span class=\"token punctuation\">-</span>lock.json // 支持 hexo 运行的 NodeJs 包</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>├── package.json      // 自定义的 NodeJs 包</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>├── scaffolds         // Hexo Markdown 加载时的关键字，如data<span class=\"token punctuation\">,</span>title等<span class=\"token punctuation\">,</span>它会在启动的时候默认加载</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>├── source            // md 源文件目录</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>└── themes            // 主题文件夹</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    └── landscape     // 默认主题</pre></td></tr></table></figure><h3 id=\"2主题结构\"><a class=\"markdownIt-Anchor\" href=\"#2主题结构\">#</a> 2. 主题结构</h3>\n<pre><code>    └── bg\t                // 自建的主题目录\n        ├── _config.yml     // 主题配置文件\n        ├── layout          // 主要构造 html 的模板\n        │   ├── index.ejs   // 主页模板\n        │   ├── layout.ejs  // 布局模板\n        │   └── post.ejs    // md 编译成 html 后的文件模板\n        └── source          // 静态资源文件目录\n            ├── css         // css 样式目录\n            └── js          // JavaScript 脚本目录\n</code></pre>\n<h3 id=\"3\"><a class=\"markdownIt-Anchor\" href=\"#3\">#</a> 3.</h3>\n<h3 id=\"4\"><a class=\"markdownIt-Anchor\" href=\"#4\">#</a> 4.</h3>\n<h3 id=\"5\"><a class=\"markdownIt-Anchor\" href=\"#5\">#</a> 5.</h3>\n<h3 id=\"6\"><a class=\"markdownIt-Anchor\" href=\"#6\">#</a> 6.</h3>\n<h3 id=\"7\"><a class=\"markdownIt-Anchor\" href=\"#7\">#</a> 7.</h3>\n<h3 id=\"8\"><a class=\"markdownIt-Anchor\" href=\"#8\">#</a> 8.</h3>\n<h3 id=\"9\"><a class=\"markdownIt-Anchor\" href=\"#9\">#</a> 9.</h3>\n<p>显示 Mac 隐藏文件的命令</p>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool true<br>\nkillall Finder</p>\n<p>隐藏 Mac 隐藏文件的命令<br>\n defaults write com.apple.finder AppleShowAllFiles -bool false<br>\nkillall Finder</p>\n","site":{"data":{}},"length":628,"excerpt":"","more":"<h1 id=\"hexo主题开发\"><a class=\"markdownIt-Anchor\" href=\"#hexo主题开发\">#</a> hexo 主题开发</h1>\n<h3 id=\"1hexo-结构\"><a class=\"markdownIt-Anchor\" href=\"#1hexo-结构\">#</a> 1.hexo 结构</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├── _config.yml       // 总体的配置文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>├── node_modules      // NodeJs 所依赖的包，后期也可以自己添加插件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>├── package<span class=\"token punctuation\">-</span>lock.json // 支持 hexo 运行的 NodeJs 包</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>├── package.json      // 自定义的 NodeJs 包</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>├── scaffolds         // Hexo Markdown 加载时的关键字，如data<span class=\"token punctuation\">,</span>title等<span class=\"token punctuation\">,</span>它会在启动的时候默认加载</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>├── source            // md 源文件目录</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>└── themes            // 主题文件夹</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    └── landscape     // 默认主题</pre></td></tr></table></figure><h3 id=\"2主题结构\"><a class=\"markdownIt-Anchor\" href=\"#2主题结构\">#</a> 2. 主题结构</h3>\n<pre><code>    └── bg\t                // 自建的主题目录\n        ├── _config.yml     // 主题配置文件\n        ├── layout          // 主要构造 html 的模板\n        │   ├── index.ejs   // 主页模板\n        │   ├── layout.ejs  // 布局模板\n        │   └── post.ejs    // md 编译成 html 后的文件模板\n        └── source          // 静态资源文件目录\n            ├── css         // css 样式目录\n            └── js          // JavaScript 脚本目录\n</code></pre>\n<h3 id=\"3\"><a class=\"markdownIt-Anchor\" href=\"#3\">#</a> 3.</h3>\n<h3 id=\"4\"><a class=\"markdownIt-Anchor\" href=\"#4\">#</a> 4.</h3>\n<h3 id=\"5\"><a class=\"markdownIt-Anchor\" href=\"#5\">#</a> 5.</h3>\n<h3 id=\"6\"><a class=\"markdownIt-Anchor\" href=\"#6\">#</a> 6.</h3>\n<h3 id=\"7\"><a class=\"markdownIt-Anchor\" href=\"#7\">#</a> 7.</h3>\n<h3 id=\"8\"><a class=\"markdownIt-Anchor\" href=\"#8\">#</a> 8.</h3>\n<h3 id=\"9\"><a class=\"markdownIt-Anchor\" href=\"#9\">#</a> 9.</h3>\n<p>显示 Mac 隐藏文件的命令</p>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool true<br>\nkillall Finder</p>\n<p>隐藏 Mac 隐藏文件的命令<br>\n defaults write com.apple.finder AppleShowAllFiles -bool false<br>\nkillall Finder</p>\n"},{"title":"第1周 计算","date":"2020-04-12T12:46:25.000Z","_content":"\n:::note info\n以下为个人学习笔记和习题整理\n课程：零基础学Java语言-浙江大学-翁恺 @ 中国大学MOOC \nhttps://www.icourse163.org/course/ZJU-1001541001\n:::\n\n# 课堂笔记\n## 读输入、字符串输出\n```java scanner\nimport java.util.Scanner;\n...\nScanner in = new Scanner(System.in);\n// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。\n\nSystem.out.println(in.nextLine());\n// 让in这个对象做读入下一行的动作，结果交给System.out这个对象去打印一行。\n\n// 字符串的 + 用来连接两个字符串形成更长的字符串。\nSystem.out.println(\"Hello\" + \" world.\");\nSystem.out.println(\"Hello\" + 2);\nSystem.out.println(\"Hello\" + 2 + 3);\nSystem.out.println(2 + 3 + \"Hello\");\n```\n\ntips：\n- `System.out.println` 会换行，`System.out.print` 则不会换行\n- 出现警告：`Resource leak: 'in' is never closed`，可以在函数的最后加入\n```java\nin.close();//释放\n```\n\n## 变量\n - **形式**：<类型名称> <变量名称> = <初始值>\n  `int price, amount; // 同时定义两个变量`\n  `int price = 0; // 定义变量并赋值`\n  `int price, amount = 100, age;`\n - **类型名称**：Java是一种**强类型语言**，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。\n - **变量名称**：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java的保留字也不能用作标识符。\n\n - Java的保留字列表\n\n| abstract | do | implements | protected | throws |\n|--|--|--|--|--|\n| boolean | double | import | public | transient\n| break | else | instanceof | return | true\n| byte | extends | int | short | try | \n| case | false | interface | static | while  \n| catch | final | long | strictfp | void\n| char | finally | native | super |  volatile\n| class | float | new | switch\n| const* | for | null | synchronized\n| continue | goto* | package | this\n| default | if | private | throw\n\n- 以下哪些标识符是符合规则的？\n - [x] currency\n - [x] lastName\n - [x] fireplace\n - [ ] _last_name\n - [x] xingmin\n - [ ] class\n - [ ] goto\n - [ ] 4ever\n - [ ] time-machine\n - [ ] Int \n - [ ] $12 \n - [ ] 我是变量\n\n## 常量 final\n```java\nfinal int AMOUNT = 100;\n// final是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。\n```\n## 变量类型\n### 整数 int\n```java\nint price = in.nextInt();\n```\n - 如果用户输入的不是整数，则会报错 `java.util.InputMismatchException`。\n -\t程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。\n - 每次召唤`in.nextInt()`，它就等待用户输入一个整数。\n - 两个整数的运算结果只能是整数。\n - 在Java中，`10`和`10.0`是完全不同的数。\n \n### 浮点数 double\n- **浮点数运算有误差**：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。\n\n```java\nSystem.out.println(1.2-1.1);\n// 结果为 0.09999999999999987\n```\n\n - 整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。\n \n## 赋值运算\n### 强制类型转换\n- 浮点数和整数放在一起运算时，Java会将整数转换成浮点数，然后进行浮点数运算。\n- 强制性转换的优先级高于四则运算。\n```java\ndouble a = 1.0;\ndouble b = 2.0;\nint i = (int)a/b; //会报错\nint i = (int)(a/b); //不会报错\n```\n### 运算符优先级\n- 单目运算符`+` `-` 优先级最高\n- 结合关系一般自左向右，单目`+` `-`和赋值`=`自右向左。\n```java\nresult = a = b = 3 + c;\nresult = 2;\nresult = (result = result * 2) * 6 * (result = 3 + result);\n```\n### 复合赋值\n- 5个算术运算符，`+ - * / %`，可以和赋值运算符 `=` 结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。\n```java\ntotal += (sum+100)/2;\ntotal = total + (sum+100)/2;\n\ntotal * = sum+12;\ntotal = total*(sum+12);\n\ntotal /= 12+6;\ntotal = total / (12+6);\n```\n- 递增递减运算符 `++` `--`，给变量+1或-1\n- 前缀后缀：\n```java\na = 14;\nt1 = a++; // t1先被赋值为 a 即14， a自加到 15\nt2 = ++a; // a先自加到 15，t2被赋值为 a 即 15\n```\n\t\n# 编程题\n## 题目1. 温度转换（5分）\n- **题目内容**\n\t写一个将华氏温度转换成摄氏温度的程序，转换的公式是：\n\t\n\t`°F = (9/5)*°C + 32`\n\t\n\t其中C表示摄氏温度，F表示华氏温度。\n\t\n\t程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。\n\t\n\t提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：\n\t\n\t`(int)x;`\n\t\n\t其中x是要转换的那个浮点数。\n\t\n\t*注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。*\n\n- **输入格式**\n一个整数。\n- **输出格式**\n一个整数。\n- **输入样例**\n100\n- **输出样例**\n37\n\n### 解题代码\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\t// 获得输入的整数\n\t\tint fahrenheit = in.nextInt();\n\t\t// 计算摄氏度\n\t\tdouble centigrade = (fahrenheit - 32) / (9 / 5.0);\n\t\t// 将浮点数转换为整数输出\n\t\tSystem.out.println((int)centigrade);\n\t}\n\n}\n```\n","source":"_posts/hexo/hexo/course-1/week-1.md","raw":"---\ntitle: 第1周 计算\ndate: 2020/04/12 20:46:25\ncategories:\n- [计算机科学, Java, 零基础学Java语言-浙江大学-翁恺]\ntags:\n---\n\n:::note info\n以下为个人学习笔记和习题整理\n课程：零基础学Java语言-浙江大学-翁恺 @ 中国大学MOOC \nhttps://www.icourse163.org/course/ZJU-1001541001\n:::\n\n# 课堂笔记\n## 读输入、字符串输出\n```java scanner\nimport java.util.Scanner;\n...\nScanner in = new Scanner(System.in);\n// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。\n\nSystem.out.println(in.nextLine());\n// 让in这个对象做读入下一行的动作，结果交给System.out这个对象去打印一行。\n\n// 字符串的 + 用来连接两个字符串形成更长的字符串。\nSystem.out.println(\"Hello\" + \" world.\");\nSystem.out.println(\"Hello\" + 2);\nSystem.out.println(\"Hello\" + 2 + 3);\nSystem.out.println(2 + 3 + \"Hello\");\n```\n\ntips：\n- `System.out.println` 会换行，`System.out.print` 则不会换行\n- 出现警告：`Resource leak: 'in' is never closed`，可以在函数的最后加入\n```java\nin.close();//释放\n```\n\n## 变量\n - **形式**：<类型名称> <变量名称> = <初始值>\n  `int price, amount; // 同时定义两个变量`\n  `int price = 0; // 定义变量并赋值`\n  `int price, amount = 100, age;`\n - **类型名称**：Java是一种**强类型语言**，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。\n - **变量名称**：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java的保留字也不能用作标识符。\n\n - Java的保留字列表\n\n| abstract | do | implements | protected | throws |\n|--|--|--|--|--|\n| boolean | double | import | public | transient\n| break | else | instanceof | return | true\n| byte | extends | int | short | try | \n| case | false | interface | static | while  \n| catch | final | long | strictfp | void\n| char | finally | native | super |  volatile\n| class | float | new | switch\n| const* | for | null | synchronized\n| continue | goto* | package | this\n| default | if | private | throw\n\n- 以下哪些标识符是符合规则的？\n - [x] currency\n - [x] lastName\n - [x] fireplace\n - [ ] _last_name\n - [x] xingmin\n - [ ] class\n - [ ] goto\n - [ ] 4ever\n - [ ] time-machine\n - [ ] Int \n - [ ] $12 \n - [ ] 我是变量\n\n## 常量 final\n```java\nfinal int AMOUNT = 100;\n// final是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。\n```\n## 变量类型\n### 整数 int\n```java\nint price = in.nextInt();\n```\n - 如果用户输入的不是整数，则会报错 `java.util.InputMismatchException`。\n -\t程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。\n - 每次召唤`in.nextInt()`，它就等待用户输入一个整数。\n - 两个整数的运算结果只能是整数。\n - 在Java中，`10`和`10.0`是完全不同的数。\n \n### 浮点数 double\n- **浮点数运算有误差**：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。\n\n```java\nSystem.out.println(1.2-1.1);\n// 结果为 0.09999999999999987\n```\n\n - 整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。\n \n## 赋值运算\n### 强制类型转换\n- 浮点数和整数放在一起运算时，Java会将整数转换成浮点数，然后进行浮点数运算。\n- 强制性转换的优先级高于四则运算。\n```java\ndouble a = 1.0;\ndouble b = 2.0;\nint i = (int)a/b; //会报错\nint i = (int)(a/b); //不会报错\n```\n### 运算符优先级\n- 单目运算符`+` `-` 优先级最高\n- 结合关系一般自左向右，单目`+` `-`和赋值`=`自右向左。\n```java\nresult = a = b = 3 + c;\nresult = 2;\nresult = (result = result * 2) * 6 * (result = 3 + result);\n```\n### 复合赋值\n- 5个算术运算符，`+ - * / %`，可以和赋值运算符 `=` 结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。\n```java\ntotal += (sum+100)/2;\ntotal = total + (sum+100)/2;\n\ntotal * = sum+12;\ntotal = total*(sum+12);\n\ntotal /= 12+6;\ntotal = total / (12+6);\n```\n- 递增递减运算符 `++` `--`，给变量+1或-1\n- 前缀后缀：\n```java\na = 14;\nt1 = a++; // t1先被赋值为 a 即14， a自加到 15\nt2 = ++a; // a先自加到 15，t2被赋值为 a 即 15\n```\n\t\n# 编程题\n## 题目1. 温度转换（5分）\n- **题目内容**\n\t写一个将华氏温度转换成摄氏温度的程序，转换的公式是：\n\t\n\t`°F = (9/5)*°C + 32`\n\t\n\t其中C表示摄氏温度，F表示华氏温度。\n\t\n\t程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。\n\t\n\t提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：\n\t\n\t`(int)x;`\n\t\n\t其中x是要转换的那个浮点数。\n\t\n\t*注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。*\n\n- **输入格式**\n一个整数。\n- **输出格式**\n一个整数。\n- **输入样例**\n100\n- **输出样例**\n37\n\n### 解题代码\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\t// 获得输入的整数\n\t\tint fahrenheit = in.nextInt();\n\t\t// 计算摄氏度\n\t\tdouble centigrade = (fahrenheit - 32) / (9 / 5.0);\n\t\t// 将浮点数转换为整数输出\n\t\tSystem.out.println((int)centigrade);\n\t}\n\n}\n```\n","slug":"hexo/hexo/course-1/week-1","published":1,"updated":"2021-02-28T02:11:24.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckloirl470007okzi7ayaehj3","content":"<p>:::note info<br>\n 以下为个人学习笔记和习题整理<br>\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br>\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"markdownIt-Anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"读输入-字符串输出\"><a class=\"markdownIt-Anchor\" href=\"#读输入-字符串输出\">#</a> 读输入、字符串输出</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>scanner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 让 in 这个对象做读入下一行的动作，结果交给 System.out 这个对象去打印一行。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>tips：</p>\n<ul>\n<li><code>System.out.println</code>  会换行， <code>System.out.print</code>  则不会换行</li>\n<li>出现警告： <code>Resource leak: 'in' is never closed</code> ，可以在函数的最后加入</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 释放</span></pre></td></tr></table></figure><h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p><strong>形式</strong>：&lt;类型名称&gt; &lt; 变量名称 &gt; = &lt; 初始值 &gt;<br>\n <code>int price, amount; // 同时定义两个变量</code> <br>\n <code>int price = 0; // 定义变量并赋值</code> <br>\n <code>int price, amount = 100, age;</code></p>\n</li>\n<li>\n<p><strong>类型名称</strong>：Java 是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>\n</li>\n<li>\n<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java 的保留字也不能用作标识符。</p>\n</li>\n<li>\n<p>Java 的保留字列表</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>do</th>\n<th>implements</th>\n<th>protected</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>import</td>\n<td>public</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>instanceof</td>\n<td>return</td>\n<td>true</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>try</td>\n</tr>\n<tr>\n<td>case</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>while</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>final</td>\n<td>long</td>\n<td>strictfp</td>\n<td>void</td>\n</tr>\n<tr>\n<td>char</td>\n<td>finally</td>\n<td>native</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>class</td>\n<td>float</td>\n<td>new</td>\n<td>switch</td>\n</tr>\n<tr>\n<td>const*</td>\n<td>for</td>\n<td>null</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>goto*</td>\n<td>package</td>\n<td>this</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>private</td>\n<td>throw</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"task-list\">\n<li>以下哪些标识符是符合规则的？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> currency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> lastName</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\"><label for=\"cbx_2\"> fireplace</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\"><label for=\"cbx_3\"> _last_name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\"><label for=\"cbx_4\"> xingmin</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\"><label for=\"cbx_5\"> class</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\"><label for=\"cbx_6\"> goto</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\"><label for=\"cbx_7\"> 4ever</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\"><label for=\"cbx_8\"> time-machine</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\"><label for=\"cbx_9\"> Int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\"><label for=\"cbx_10\"> $12</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\"><label for=\"cbx_11\"> 我是变量</label></li>\n</ul>\n<h2 id=\"常量-final\"><a class=\"markdownIt-Anchor\" href=\"#常量-final\">#</a> 常量 final</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> AMOUNT <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//final 是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span></pre></td></tr></table></figure><h2 id=\"变量类型\"><a class=\"markdownIt-Anchor\" href=\"#变量类型\">#</a> 变量类型</h2>\n<h3 id=\"整数-int\"><a class=\"markdownIt-Anchor\" href=\"#整数-int\">#</a> 整数 int</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>如果用户输入的不是整数，则会报错  <code>java.util.InputMismatchException</code> 。</li>\n<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>\n<li>每次召唤 <code>in.nextInt()</code> ，它就等待用户输入一个整数。</li>\n<li>两个整数的运算结果只能是整数。</li>\n<li>在 Java 中， <code>10</code>  和 <code>10.0</code>  是完全不同的数。</li>\n</ul>\n<h3 id=\"浮点数-double\"><a class=\"markdownIt-Anchor\" href=\"#浮点数-double\">#</a> 浮点数 double</h3>\n<ul>\n<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.2</span><span class=\"token operator\">-</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 结果为 0.09999999999999987</span></pre></td></tr></table></figure><ul>\n<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>\n</ul>\n<h2 id=\"赋值运算\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算\">#</a> 赋值运算</h2>\n<h3 id=\"强制类型转换\"><a class=\"markdownIt-Anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h3>\n<ul>\n<li>浮点数和整数放在一起运算时，Java 会将整数转换成浮点数，然后进行浮点数运算。</li>\n<li>强制性转换的优先级高于四则运算。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不会报错</span></pre></td></tr></table></figure><h3 id=\"运算符优先级\"><a class=\"markdownIt-Anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<ul>\n<li>单目运算符 <code>+</code>   <code>-</code>  优先级最高</li>\n<li>结合关系一般自左向右，单目 <code>+</code>   <code>-</code>  和赋值 <code>=</code>  自右向左。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"复合赋值\"><a class=\"markdownIt-Anchor\" href=\"#复合赋值\">#</a> 复合赋值</h3>\n<ul>\n<li>5 个算术运算符， <code>+ - * / %</code> ，可以和赋值运算符  <code>=</code>  结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token operator\">*</span> <span class=\"token operator\">=</span> sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>total <span class=\"token operator\">=</span> total<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>total <span class=\"token operator\">/=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>递增递减运算符  <code>++</code>   <code>--</code> ，给变量 + 1 或 - 1</li>\n<li>前缀后缀：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t1 <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//t1 先被赋值为 a 即 14， a 自加到 15</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>t2 <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 先自加到 15，t2 被赋值为 a 即 15</span></pre></td></tr></table></figure><h1 id=\"编程题\"><a class=\"markdownIt-Anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-温度转换5分\"><a class=\"markdownIt-Anchor\" href=\"#题目1-温度转换5分\">#</a> 题目 1. 温度转换（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p>\n<p><code>°F = (9/5)*°C + 32</code></p>\n<p>其中 C 表示摄氏温度，F 表示华氏温度。</p>\n<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>\n<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>\n<p><code>(int)x;</code></p>\n<p>其中 x 是要转换的那个浮点数。</p>\n<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一个整数。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 100</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n 37</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"markdownIt-Anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">// 获得输入的整数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> fahrenheit <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 计算摄氏度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> centigrade <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token comment\">// 将浮点数转换为整数输出</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>centigrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"length":2670,"excerpt":"","more":"<p>:::note info<br>\n 以下为个人学习笔记和习题整理<br>\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br>\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"markdownIt-Anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"读输入-字符串输出\"><a class=\"markdownIt-Anchor\" href=\"#读输入-字符串输出\">#</a> 读输入、字符串输出</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>scanner</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 让 in 这个对象做读入下一行的动作，结果交给 System.out 这个对象去打印一行。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>tips：</p>\n<ul>\n<li><code>System.out.println</code>  会换行， <code>System.out.print</code>  则不会换行</li>\n<li>出现警告： <code>Resource leak: 'in' is never closed</code> ，可以在函数的最后加入</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 释放</span></pre></td></tr></table></figure><h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p><strong>形式</strong>：&lt;类型名称&gt; &lt; 变量名称 &gt; = &lt; 初始值 &gt;<br>\n <code>int price, amount; // 同时定义两个变量</code> <br>\n <code>int price = 0; // 定义变量并赋值</code> <br>\n <code>int price, amount = 100, age;</code></p>\n</li>\n<li>\n<p><strong>类型名称</strong>：Java 是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>\n</li>\n<li>\n<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java 的保留字也不能用作标识符。</p>\n</li>\n<li>\n<p>Java 的保留字列表</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>do</th>\n<th>implements</th>\n<th>protected</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>import</td>\n<td>public</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>instanceof</td>\n<td>return</td>\n<td>true</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>try</td>\n</tr>\n<tr>\n<td>case</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>while</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>final</td>\n<td>long</td>\n<td>strictfp</td>\n<td>void</td>\n</tr>\n<tr>\n<td>char</td>\n<td>finally</td>\n<td>native</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>class</td>\n<td>float</td>\n<td>new</td>\n<td>switch</td>\n</tr>\n<tr>\n<td>const*</td>\n<td>for</td>\n<td>null</td>\n<td>synchronized</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>goto*</td>\n<td>package</td>\n<td>this</td>\n</tr>\n<tr>\n<td>default</td>\n<td>if</td>\n<td>private</td>\n<td>throw</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"task-list\">\n<li>以下哪些标识符是符合规则的？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> currency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> lastName</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" checked=\"true\" disabled=\"true\"><label for=\"cbx_2\"> fireplace</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\"><label for=\"cbx_3\"> _last_name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\"><label for=\"cbx_4\"> xingmin</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\"><label for=\"cbx_5\"> class</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\"><label for=\"cbx_6\"> goto</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\"><label for=\"cbx_7\"> 4ever</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_8\" disabled=\"true\"><label for=\"cbx_8\"> time-machine</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_9\" disabled=\"true\"><label for=\"cbx_9\"> Int</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\"><label for=\"cbx_10\"> $12</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\"><label for=\"cbx_11\"> 我是变量</label></li>\n</ul>\n<h2 id=\"常量-final\"><a class=\"markdownIt-Anchor\" href=\"#常量-final\">#</a> 常量 final</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> AMOUNT <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//final 是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span></pre></td></tr></table></figure><h2 id=\"变量类型\"><a class=\"markdownIt-Anchor\" href=\"#变量类型\">#</a> 变量类型</h2>\n<h3 id=\"整数-int\"><a class=\"markdownIt-Anchor\" href=\"#整数-int\">#</a> 整数 int</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>如果用户输入的不是整数，则会报错  <code>java.util.InputMismatchException</code> 。</li>\n<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>\n<li>每次召唤 <code>in.nextInt()</code> ，它就等待用户输入一个整数。</li>\n<li>两个整数的运算结果只能是整数。</li>\n<li>在 Java 中， <code>10</code>  和 <code>10.0</code>  是完全不同的数。</li>\n</ul>\n<h3 id=\"浮点数-double\"><a class=\"markdownIt-Anchor\" href=\"#浮点数-double\">#</a> 浮点数 double</h3>\n<ul>\n<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.2</span><span class=\"token operator\">-</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 结果为 0.09999999999999987</span></pre></td></tr></table></figure><ul>\n<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>\n</ul>\n<h2 id=\"赋值运算\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算\">#</a> 赋值运算</h2>\n<h3 id=\"强制类型转换\"><a class=\"markdownIt-Anchor\" href=\"#强制类型转换\">#</a> 强制类型转换</h3>\n<ul>\n<li>浮点数和整数放在一起运算时，Java 会将整数转换成浮点数，然后进行浮点数运算。</li>\n<li>强制性转换的优先级高于四则运算。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 会报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不会报错</span></pre></td></tr></table></figure><h3 id=\"运算符优先级\"><a class=\"markdownIt-Anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h3>\n<ul>\n<li>单目运算符 <code>+</code>   <code>-</code>  优先级最高</li>\n<li>结合关系一般自左向右，单目 <code>+</code>   <code>-</code>  和赋值 <code>=</code>  自右向左。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> result <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"复合赋值\"><a class=\"markdownIt-Anchor\" href=\"#复合赋值\">#</a> 复合赋值</h3>\n<ul>\n<li>5 个算术运算符， <code>+ - * / %</code> ，可以和赋值运算符  <code>=</code>  结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>total <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>total <span class=\"token operator\">*</span> <span class=\"token operator\">=</span> sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>total <span class=\"token operator\">=</span> total<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>sum<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>total <span class=\"token operator\">/=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>total <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>递增递减运算符  <code>++</code>   <code>--</code> ，给变量 + 1 或 - 1</li>\n<li>前缀后缀：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>t1 <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//t1 先被赋值为 a 即 14， a 自加到 15</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>t2 <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 先自加到 15，t2 被赋值为 a 即 15</span></pre></td></tr></table></figure><h1 id=\"编程题\"><a class=\"markdownIt-Anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-温度转换5分\"><a class=\"markdownIt-Anchor\" href=\"#题目1-温度转换5分\">#</a> 题目 1. 温度转换（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p>\n<p><code>°F = (9/5)*°C + 32</code></p>\n<p>其中 C 表示摄氏温度，F 表示华氏温度。</p>\n<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>\n<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>\n<p><code>(int)x;</code></p>\n<p>其中 x 是要转换的那个浮点数。</p>\n<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一个整数。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 100</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n 37</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"markdownIt-Anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">// 获得输入的整数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> fahrenheit <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token comment\">// 计算摄氏度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> centigrade <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token operator\">/</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token comment\">// 将浮点数转换为整数输出</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>centigrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>"},{"title":"第2周 判断","date":"2020-04-13T11:12:45.000Z","_content":"\n:::note info\n以下为个人学习笔记和习题整理\n课程：零基础学Java语言-浙江大学-翁恺 @ 中国大学MOOC \nhttps://www.icourse163.org/course/ZJU-1001541001\n:::\n\n# 课堂笔记\n## 关系运算\n- 六个关系运算符：\n\n运算符 | 意义\n|--|--|\n== | 相等\n!=|不相等\n>|大于\n>=|大于或等于\n<\t| 小于\n<=|小于或等于\n\n- 关系运算结果为 `true` 或 `false`\n - 优先级\n\t- 所有关系运算符的优先级比算术运算低，但比赋值运算高\n\t- 判断是否相等的 == 和 != 优先级比其他的低\n\t- 连续的关系运算是从左到右进行的\n- 判断两个浮点数是否相等的方法\n```java\n\tMath.abs(f1-f2)<0.0000001\n```\n- 下列表达式中错误的有？\n - [ ] 5 > 3 == 6 > 4\n - [x] 6 > 5 > 4\n - [ ] a == b == true\n - [x] a == b == 6\n - [x] a ==  b > false\n - [x] (a == b) > false\n `true 和 false 不能比较大小`\n\n## 判断语句 if else\n```java\nif(x < 0) \n{\n\t...\n}\nelse if(x == 0) \n{\n\t...\n}\nelse\n{\n\t...\n}\n```\n\n## 多路分支 switch case\n\n```java\nswitch (type)\n{\n    case 1:\n    case 2:\n        ...\n        break;\n    default:\n        System.out.println(...);\n        break;\n}\n```\n- 计算switch后面的控制表达式以后，程序会跳到相应的case，但是如果这个case内部没有break，那么在执行完语句后，就会顺序执行到下面的case，直到遇到break或者switch结束。\n\t\n# 小测验\n\n1. 写出以下代码段的执行结果： {.quiz .essay}\n\t```java\n\tint num=34, max=30;\n\tif ( num >= max*2 )\n\t    System.out.println(\"zhang\");\n\t    System.out.println(\"huang\");\n\tSystem.out.println(\"zhu\");\n\t```\n\n\t> huang\n\t> zhu\n\n2. 写出以下代码段的执行结果： {.quiz .essay}\n\t```java\n\tint limit = 100;\n\tint num1 = 15;\n\tint num2 = 40;\n\tif ( limit <= limit)\n\t{\n\t    if ( num1 == num2 )\n\t        System.out.println(\"lemon\");\n\t    System.out.println(\"lime\");\n\t}\n\tSystem.out.println(\"grape\");\n\t```\n\n\t> lime\n\t> grape\n\n# 编程题\n## 题目1. 时间换算（5分）\n - **题目内容**\n\tUTC是世界协调时，BJT是北京时间，UTC时间相当于BJT减去8。现在，你的程序要读入一个整数，表示BJT的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果分小于10分，需要保留十位上的0。如1124表示11点24分，而905表示9点5分，36表示0点36分，7表示0点7分。\n\t\n\t有效的输入范围是0到2359，即你的程序不可能从测试服务器读到0到2359以外的输入数据。\n\t\n\t你的程序要输出这个时间对应的UTC时间，输出的格式和输入的相同，即输出一个整数，表示UTC的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果分小于10分，需要保留十位上的0。\n\t\n\t*提醒：要小心跨日的换算。*\n\n- **输入格式**\n一个整数，表示BJT的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而且分小于10分，需要保留十位上的0。\n- **输出格式**\n一个整数，表示UTC的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而且分小于10分，需要保留十位上的0。\n- **输入样例**\n933\n- **输出样例**\n133\n\n### 解题代码\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint bjt = in.nextInt();\n\t\t\n\t\tint utc = bjt - 800;\n\t\tif(utc < 0)\n\t\t{\n\t\t\tutc += 2400; // 时为负数，则进行隔日计算\n\t\t}\n\t\t\n\t\tSystem.out.println(utc);\n\t}\n\n}\n```\n\n## 题目2. 信号报告（5分）\n- **题目内容**\n\t无线电台的RS制信号报告是由三两个部分组成的：\n\t\n\tR(Readability) 信号可辨度即清晰度.\n\t\n\tS(Strength)    信号强度即大小.\n\t\n\t其中R位于报告第一位，共分5级，用1—5数字表示.\n\t\n\t> 1---Unreadable\n\t> \n\t> 2---Barely readable, occasional words distinguishable\n\t> \n\t> 3---Readable with considerable difficulty\n\t> \n\t> 4---Readable with practically no difficulty\n\t> \n\t> 5---Perfectly readable\n\t\n\t报告第二位是S，共分九个级别，用1—9中的一位数字表示\n\t\n\t> 1---Faint signals, barely perceptible\n\t> \n\t> 2---Very weak signals\n\t> \n\t> 3---Weak signals\n\t> \n\t> 4---Fair signals\n\t> \n\t> 5---Fairly good signals\n\t> \n\t> 6---Good signals\n\t> \n\t> 7---Moderately strong signals\n\t> \n\t> 8---Strong signals\n\t> \n\t> 9---Extremely strong signals\n\t\n\t现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到59，则输出：\t\n\t`\tExtremely strong signals, perfectly readable.\t`\n- **输入格式**\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是[11,59]内有效的数字，这个范围外的数字不可能出现在测试数据中。\n\n- **输出格式**\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。\n\n- **输入样例**\n33\n- **输出样例**\nWeak signals, readable with considerable difficulty.\n\n### 解题代码\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint rs = in.nextInt();\t\t\n\t\tint readability = rs / 10;\n\t\tint strength = rs % 10;\n\t\t\n\t\tswitch(strength)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\"Faint signals, barely perceptible\");\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.print(\"Very weak signals\");\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.print(\"Weak signals\");\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.print(\"Fair signals\");\n\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.print(\"Fairly good signals\");\n\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.print(\"Good signals\");\n\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tSystem.out.print(\"Moderately strong signals\");\n\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tSystem.out.print(\"Strong signals\");\n\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tSystem.out.print(\"Extremely strong signals\");\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tswitch(readability)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\", unreadable.\");\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.print(\", barely readable, occasional words distinguishable.\");\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.print(\", readable with considerable difficulty.\");\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.print(\", readable with practically no difficulty.\");\n\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.print(\", perfectly readable.\");\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n```\n","source":"_posts/hexo/hexo/course-1/week-2.md","raw":"---\ntitle: 第2周 判断\ndate: 2020/04/13 19:12:45\ncategories:\n- [计算机科学, Java, 零基础学Java语言-浙江大学-翁恺]\ntags:\n---\n\n:::note info\n以下为个人学习笔记和习题整理\n课程：零基础学Java语言-浙江大学-翁恺 @ 中国大学MOOC \nhttps://www.icourse163.org/course/ZJU-1001541001\n:::\n\n# 课堂笔记\n## 关系运算\n- 六个关系运算符：\n\n运算符 | 意义\n|--|--|\n== | 相等\n!=|不相等\n>|大于\n>=|大于或等于\n<\t| 小于\n<=|小于或等于\n\n- 关系运算结果为 `true` 或 `false`\n - 优先级\n\t- 所有关系运算符的优先级比算术运算低，但比赋值运算高\n\t- 判断是否相等的 == 和 != 优先级比其他的低\n\t- 连续的关系运算是从左到右进行的\n- 判断两个浮点数是否相等的方法\n```java\n\tMath.abs(f1-f2)<0.0000001\n```\n- 下列表达式中错误的有？\n - [ ] 5 > 3 == 6 > 4\n - [x] 6 > 5 > 4\n - [ ] a == b == true\n - [x] a == b == 6\n - [x] a ==  b > false\n - [x] (a == b) > false\n `true 和 false 不能比较大小`\n\n## 判断语句 if else\n```java\nif(x < 0) \n{\n\t...\n}\nelse if(x == 0) \n{\n\t...\n}\nelse\n{\n\t...\n}\n```\n\n## 多路分支 switch case\n\n```java\nswitch (type)\n{\n    case 1:\n    case 2:\n        ...\n        break;\n    default:\n        System.out.println(...);\n        break;\n}\n```\n- 计算switch后面的控制表达式以后，程序会跳到相应的case，但是如果这个case内部没有break，那么在执行完语句后，就会顺序执行到下面的case，直到遇到break或者switch结束。\n\t\n# 小测验\n\n1. 写出以下代码段的执行结果： {.quiz .essay}\n\t```java\n\tint num=34, max=30;\n\tif ( num >= max*2 )\n\t    System.out.println(\"zhang\");\n\t    System.out.println(\"huang\");\n\tSystem.out.println(\"zhu\");\n\t```\n\n\t> huang\n\t> zhu\n\n2. 写出以下代码段的执行结果： {.quiz .essay}\n\t```java\n\tint limit = 100;\n\tint num1 = 15;\n\tint num2 = 40;\n\tif ( limit <= limit)\n\t{\n\t    if ( num1 == num2 )\n\t        System.out.println(\"lemon\");\n\t    System.out.println(\"lime\");\n\t}\n\tSystem.out.println(\"grape\");\n\t```\n\n\t> lime\n\t> grape\n\n# 编程题\n## 题目1. 时间换算（5分）\n - **题目内容**\n\tUTC是世界协调时，BJT是北京时间，UTC时间相当于BJT减去8。现在，你的程序要读入一个整数，表示BJT的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果分小于10分，需要保留十位上的0。如1124表示11点24分，而905表示9点5分，36表示0点36分，7表示0点7分。\n\t\n\t有效的输入范围是0到2359，即你的程序不可能从测试服务器读到0到2359以外的输入数据。\n\t\n\t你的程序要输出这个时间对应的UTC时间，输出的格式和输入的相同，即输出一个整数，表示UTC的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果分小于10分，需要保留十位上的0。\n\t\n\t*提醒：要小心跨日的换算。*\n\n- **输入格式**\n一个整数，表示BJT的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而且分小于10分，需要保留十位上的0。\n- **输出格式**\n一个整数，表示UTC的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于10，则没有千位部分；如果小时是0，则没有百位部分；如果小时不是0而且分小于10分，需要保留十位上的0。\n- **输入样例**\n933\n- **输出样例**\n133\n\n### 解题代码\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint bjt = in.nextInt();\n\t\t\n\t\tint utc = bjt - 800;\n\t\tif(utc < 0)\n\t\t{\n\t\t\tutc += 2400; // 时为负数，则进行隔日计算\n\t\t}\n\t\t\n\t\tSystem.out.println(utc);\n\t}\n\n}\n```\n\n## 题目2. 信号报告（5分）\n- **题目内容**\n\t无线电台的RS制信号报告是由三两个部分组成的：\n\t\n\tR(Readability) 信号可辨度即清晰度.\n\t\n\tS(Strength)    信号强度即大小.\n\t\n\t其中R位于报告第一位，共分5级，用1—5数字表示.\n\t\n\t> 1---Unreadable\n\t> \n\t> 2---Barely readable, occasional words distinguishable\n\t> \n\t> 3---Readable with considerable difficulty\n\t> \n\t> 4---Readable with practically no difficulty\n\t> \n\t> 5---Perfectly readable\n\t\n\t报告第二位是S，共分九个级别，用1—9中的一位数字表示\n\t\n\t> 1---Faint signals, barely perceptible\n\t> \n\t> 2---Very weak signals\n\t> \n\t> 3---Weak signals\n\t> \n\t> 4---Fair signals\n\t> \n\t> 5---Fairly good signals\n\t> \n\t> 6---Good signals\n\t> \n\t> 7---Moderately strong signals\n\t> \n\t> 8---Strong signals\n\t> \n\t> 9---Extremely strong signals\n\t\n\t现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到59，则输出：\t\n\t`\tExtremely strong signals, perfectly readable.\t`\n- **输入格式**\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是[11,59]内有效的数字，这个范围外的数字不可能出现在测试数据中。\n\n- **输出格式**\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。\n\n- **输入样例**\n33\n- **输出样例**\nWeak signals, readable with considerable difficulty.\n\n### 解题代码\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint rs = in.nextInt();\t\t\n\t\tint readability = rs / 10;\n\t\tint strength = rs % 10;\n\t\t\n\t\tswitch(strength)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\"Faint signals, barely perceptible\");\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.print(\"Very weak signals\");\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.print(\"Weak signals\");\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.print(\"Fair signals\");\n\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.print(\"Fairly good signals\");\n\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tSystem.out.print(\"Good signals\");\n\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tSystem.out.print(\"Moderately strong signals\");\n\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tSystem.out.print(\"Strong signals\");\n\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tSystem.out.print(\"Extremely strong signals\");\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tswitch(readability)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\", unreadable.\");\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tSystem.out.print(\", barely readable, occasional words distinguishable.\");\n\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tSystem.out.print(\", readable with considerable difficulty.\");\n\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tSystem.out.print(\", readable with practically no difficulty.\");\n\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.print(\", perfectly readable.\");\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n```\n","slug":"hexo/hexo/course-1/week-2","published":1,"updated":"2021-02-28T02:11:24.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckloirl470008okzi17xeapas","content":"<p>:::note info<br>\n 以下为个人学习笔记和习题整理<br>\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br>\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"markdownIt-Anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"关系运算\"><a class=\"markdownIt-Anchor\" href=\"#关系运算\">#</a> 关系运算</h2>\n<ul>\n<li>六个关系运算符：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>相等</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>不相等</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于或等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于或等于</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>关系运算结果为  <code>true</code>  或  <code>false</code></li>\n<li>优先级\n<ul>\n<li>所有关系运算符的优先级比算术运算低，但比赋值运算高</li>\n<li>判断是否相等的 == 和！= 优先级比其他的低</li>\n<li>连续的关系运算是从左到右进行的</li>\n</ul>\n</li>\n<li>判断两个浮点数是否相等的方法</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>f1<span class=\"token operator\">-</span>f2<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0000001</span></pre></td></tr></table></figure><ul class=\"task-list\">\n<li>下列表达式中错误的有？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 5 &gt; 3 == 6 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> 6 &gt; 5 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\"> a == b == true</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\"><label for=\"cbx_3\"> a == b == 6</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\"><label for=\"cbx_4\"> a ==  b &gt; false</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\"><label for=\"cbx_5\"> (a == b) &gt; false<br>\n <code>true 和 false 不能比较大小</code> </label></li>\n</ul>\n<h2 id=\"判断语句-if-else\"><a class=\"markdownIt-Anchor\" href=\"#判断语句-if-else\">#</a> 判断语句 if else</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"多路分支-switch-case\"><a class=\"markdownIt-Anchor\" href=\"#多路分支-switch-case\">#</a> 多路分支 switch case</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>计算 switch 后面的控制表达式以后，程序会跳到相应的 case，但是如果这个 case 内部没有 break，那么在执行完语句后，就会顺序执行到下面的 case，直到遇到 break 或者 switch 结束。</li>\n</ul>\n<h1 id=\"小测验\"><a class=\"markdownIt-Anchor\" href=\"#小测验\">#</a> 小测验</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">>=</span> max<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"huang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>huang<br>\nzhu</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> limit <span class=\"token operator\">&lt;=</span> limit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num1 <span class=\"token operator\">==</span> num2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"grape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>lime<br>\ngrape</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"编程题\"><a class=\"markdownIt-Anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-时间换算5分\"><a class=\"markdownIt-Anchor\" href=\"#题目1-时间换算5分\">#</a> 题目 1. 时间换算（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n UTC 是世界协调时，BJT 是北京时间，UTC 时间相当于 BJT 减去 8。现在，你的程序要读入一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。如 1124 表示 11 点 24 分，而 905 表示 9 点 5 分，36 表示 0 点 36 分，7 表示 0 点 7 分。</p>\n<p>有效的输入范围是 0 到 2359，即你的程序不可能从测试服务器读到 0 到 2359 以外的输入数据。</p>\n<p>你的程序要输出这个时间对应的 UTC 时间，输出的格式和输入的相同，即输出一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。</p>\n<p><em>提醒：要小心跨日的换算。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 933</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n 133</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"markdownIt-Anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> bjt <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> utc <span class=\"token operator\">=</span> bjt <span class=\"token operator\">-</span> <span class=\"token number\">800</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>utc <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tutc <span class=\"token operator\">+=</span> <span class=\"token number\">2400</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 时为负数，则进行隔日计算</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"题目2-信号报告5分\"><a class=\"markdownIt-Anchor\" href=\"#题目2-信号报告5分\">#</a> 题目 2. 信号报告（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n无线电台的 RS 制信号报告是由三两个部分组成的：</p>\n<p>R (Readability) 信号可辨度即清晰度.</p>\n<p>S (Strength)    信号强度即大小.</p>\n<p>其中 R 位于报告第一位，共分 5 级，用 1—5 数字表示.</p>\n<blockquote>\n<p>1—Unreadable</p>\n<p>2—Barely readable, occasional words distinguishable</p>\n<p>3—Readable with considerable difficulty</p>\n<p>4—Readable with practically no difficulty</p>\n<p>5—Perfectly readable</p>\n</blockquote>\n<p>报告第二位是 S，共分九个级别，用 1—9 中的一位数字表示</p>\n<blockquote>\n<p>1—Faint signals, barely perceptible</p>\n<p>2—Very weak signals</p>\n<p>3—Weak signals</p>\n<p>4—Fair signals</p>\n<p>5—Fairly good signals</p>\n<p>6—Good signals</p>\n<p>7—Moderately strong signals</p>\n<p>8—Strong signals</p>\n<p>9—Extremely strong signals</p>\n</blockquote>\n<p>现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到 59，则输出：\t<br>\n <code>\tExtremely strong signals, perfectly readable.\t</code></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是 [11,59] 内有效的数字，这个范围外的数字不可能出现在测试数据中。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 33</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n Weak signals, readable with considerable difficulty.</p>\n</li>\n</ul>\n<h3 id=\"解题代码-2\"><a class=\"markdownIt-Anchor\" href=\"#解题代码-2\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> readability <span class=\"token operator\">=</span> rs <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> strength <span class=\"token operator\">=</span> rs <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>strength<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Faint signals, barely perceptible\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Very weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fair signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fairly good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Moderately strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Extremely strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>readability<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", unreadable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", barely readable, occasional words distinguishable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with considerable difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with practically no difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", perfectly readable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"length":3607,"excerpt":"","more":"<p>:::note info<br>\n 以下为个人学习笔记和习题整理<br>\n课程：零基础学 Java 语言 - 浙江大学 - 翁恺 @ 中国大学 MOOC<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQxMDAx\">https://www.icourse163.org/course/ZJU-1001541001</span><br>\n:::</p>\n<h1 id=\"课堂笔记\"><a class=\"markdownIt-Anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"关系运算\"><a class=\"markdownIt-Anchor\" href=\"#关系运算\">#</a> 关系运算</h2>\n<ul>\n<li>六个关系运算符：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>==</td>\n<td>相等</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>不相等</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于或等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于或等于</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>关系运算结果为  <code>true</code>  或  <code>false</code></li>\n<li>优先级\n<ul>\n<li>所有关系运算符的优先级比算术运算低，但比赋值运算高</li>\n<li>判断是否相等的 == 和！= 优先级比其他的低</li>\n<li>连续的关系运算是从左到右进行的</li>\n</ul>\n</li>\n<li>判断两个浮点数是否相等的方法</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>f1<span class=\"token operator\">-</span>f2<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0000001</span></pre></td></tr></table></figure><ul class=\"task-list\">\n<li>下列表达式中错误的有？</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\"><label for=\"cbx_0\"> 5 &gt; 3 == 6 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\"><label for=\"cbx_1\"> 6 &gt; 5 &gt; 4</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\"><label for=\"cbx_2\"> a == b == true</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\"><label for=\"cbx_3\"> a == b == 6</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\"><label for=\"cbx_4\"> a ==  b &gt; false</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\"><label for=\"cbx_5\"> (a == b) &gt; false<br>\n <code>true 和 false 不能比较大小</code> </label></li>\n</ul>\n<h2 id=\"判断语句-if-else\"><a class=\"markdownIt-Anchor\" href=\"#判断语句-if-else\">#</a> 判断语句 if else</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"多路分支-switch-case\"><a class=\"markdownIt-Anchor\" href=\"#多路分支-switch-case\">#</a> 多路分支 switch case</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>计算 switch 后面的控制表达式以后，程序会跳到相应的 case，但是如果这个 case 内部没有 break，那么在执行完语句后，就会顺序执行到下面的 case，直到遇到 break 或者 switch 结束。</li>\n</ul>\n<h1 id=\"小测验\"><a class=\"markdownIt-Anchor\" href=\"#小测验\">#</a> 小测验</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> num<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num <span class=\"token operator\">>=</span> max<span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"huang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>huang<br>\nzhu</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>写出以下代码段的执行结果：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> limit <span class=\"token operator\">&lt;=</span> limit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> num1 <span class=\"token operator\">==</span> num2 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"grape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>lime<br>\ngrape</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"编程题\"><a class=\"markdownIt-Anchor\" href=\"#编程题\">#</a> 编程题</h1>\n<h2 id=\"题目1-时间换算5分\"><a class=\"markdownIt-Anchor\" href=\"#题目1-时间换算5分\">#</a> 题目 1. 时间换算（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n UTC 是世界协调时，BJT 是北京时间，UTC 时间相当于 BJT 减去 8。现在，你的程序要读入一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。如 1124 表示 11 点 24 分，而 905 表示 9 点 5 分，36 表示 0 点 36 分，7 表示 0 点 7 分。</p>\n<p>有效的输入范围是 0 到 2359，即你的程序不可能从测试服务器读到 0 到 2359 以外的输入数据。</p>\n<p>你的程序要输出这个时间对应的 UTC 时间，输出的格式和输入的相同，即输出一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果分小于 10 分，需要保留十位上的 0。</p>\n<p><em>提醒：要小心跨日的换算。</em></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数，表示 BJT 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一个整数，表示 UTC 的时和分。整数的个位和十位表示分，百位和千位表示小时。如果小时小于 10，则没有千位部分；如果小时是 0，则没有百位部分；如果小时不是 0 而且分小于 10 分，需要保留十位上的 0。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 933</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n 133</p>\n</li>\n</ul>\n<h3 id=\"解题代码\"><a class=\"markdownIt-Anchor\" href=\"#解题代码\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> bjt <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> utc <span class=\"token operator\">=</span> bjt <span class=\"token operator\">-</span> <span class=\"token number\">800</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>utc <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\tutc <span class=\"token operator\">+=</span> <span class=\"token number\">2400</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 时为负数，则进行隔日计算</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"题目2-信号报告5分\"><a class=\"markdownIt-Anchor\" href=\"#题目2-信号报告5分\">#</a> 题目 2. 信号报告（5 分）</h2>\n<ul>\n<li>\n<p><strong>题目内容</strong><br>\n无线电台的 RS 制信号报告是由三两个部分组成的：</p>\n<p>R (Readability) 信号可辨度即清晰度.</p>\n<p>S (Strength)    信号强度即大小.</p>\n<p>其中 R 位于报告第一位，共分 5 级，用 1—5 数字表示.</p>\n<blockquote>\n<p>1—Unreadable</p>\n<p>2—Barely readable, occasional words distinguishable</p>\n<p>3—Readable with considerable difficulty</p>\n<p>4—Readable with practically no difficulty</p>\n<p>5—Perfectly readable</p>\n</blockquote>\n<p>报告第二位是 S，共分九个级别，用 1—9 中的一位数字表示</p>\n<blockquote>\n<p>1—Faint signals, barely perceptible</p>\n<p>2—Very weak signals</p>\n<p>3—Weak signals</p>\n<p>4—Fair signals</p>\n<p>5—Fairly good signals</p>\n<p>6—Good signals</p>\n<p>7—Moderately strong signals</p>\n<p>8—Strong signals</p>\n<p>9—Extremely strong signals</p>\n</blockquote>\n<p>现在，你的程序要读入一个信号报告的数字，然后输出对应的含义。如读到 59，则输出：\t<br>\n <code>\tExtremely strong signals, perfectly readable.\t</code></p>\n</li>\n<li>\n<p><strong>输入格式</strong><br>\n一个整数，信号报告。整数的十位部分表示可辨度，个位部分表示强度。输入的整数范围是 [11,59] 内有效的数字，这个范围外的数字不可能出现在测试数据中。</p>\n</li>\n<li>\n<p><strong>输出格式</strong><br>\n一句话，表示这个信号报告的意义。按照题目中的文字，先输出表示强度的文字，跟上逗号和空格，然后是表示可辨度的文字，跟上句号。注意可辨度的句子的第一个字母是小写的。注意这里的标点符号都是英文的。</p>\n</li>\n<li>\n<p><strong>输入样例</strong><br>\n 33</p>\n</li>\n<li>\n<p><strong>输出样例</strong><br>\n Weak signals, readable with considerable difficulty.</p>\n</li>\n</ul>\n<h3 id=\"解题代码-2\"><a class=\"markdownIt-Anchor\" href=\"#解题代码-2\">#</a> 解题代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> readability <span class=\"token operator\">=</span> rs <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> strength <span class=\"token operator\">=</span> rs <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>strength<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Faint signals, barely perceptible\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Very weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Weak signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fair signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fairly good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Good signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Moderately strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Extremely strong signals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>readability<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", unreadable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", barely readable, occasional words distinguishable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with considerable difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", readable with practically no difficulty.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", perfectly readable.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckloirl3o0000okzi7ke860t7","category_id":"ckloirl3z0001okzid66uhh1k","_id":"ckloirl430004okzicx5gcxlm"},{"post_id":"ckloirl3o0000okzi7ke860t7","category_id":"ckloirl410002okzievmn9azt","_id":"ckloirl430005okzi0olb27s8"},{"post_id":"ckloirl3o0000okzi7ke860t7","category_id":"ckloirl420003okzi0etj9wql","_id":"ckloirl430006okziacef8cax"},{"post_id":"ckloirl470007okzi7ayaehj3","category_id":"ckloi19y400003fzihtl40fm3","_id":"ckloirl480009okzie6b544xh"},{"post_id":"ckloirl470007okzi7ayaehj3","category_id":"ckloi19y500013fzi7we6fy23","_id":"ckloirl48000aokzidsxz5wt4"},{"post_id":"ckloirl470007okzi7ayaehj3","category_id":"ckloi19y600023fzi4c738z1h","_id":"ckloirl48000bokzi5vvtcss7"},{"post_id":"ckloirl470008okzi17xeapas","category_id":"ckloi19y400003fzihtl40fm3","_id":"ckloirl49000cokzi2g621w1q"},{"post_id":"ckloirl470008okzi17xeapas","category_id":"ckloi19y500013fzi7we6fy23","_id":"ckloirl49000dokzi6m907rk4"},{"post_id":"ckloirl470008okzi17xeapas","category_id":"ckloi19y600023fzi4c738z1h","_id":"ckloirl49000eokzi3jdn1xuq"}],"PostTag":[],"Tag":[]}}