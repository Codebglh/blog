{
    "version": "https://jsonfeed.org/version/1",
    "title": "通幽子怀",
    "description": "",
    "home_page_url": "http://bglh.xyz",
    "items": [
        {
            "id": "http://bglh.xyz/2021/02/24/mysql%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/",
            "url": "http://bglh.xyz/2021/02/24/mysql%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/",
            "title": "",
            "date_published": "2021-02-24T08:15:48.313Z",
            "content_html": "<h1 id=\"mac-上的-mysql-管理工具-sequel-pro\"><a class=\"anchor\" href=\"#mac-上的-mysql-管理工具-sequel-pro\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwNjI1NTkyMw==\">Mac 上的 MySQL 管理工具 -- Sequel Pro</span></h1>\n<p>Sequel Pro 是 Mac 用户常用的 MySQL 管理软件，属于开源项目 CocoaMySQL 的一个分支。它支持包括索引在内的所有表管理功能，支持 MySQL 视图，可以同时使用多个窗口来操作多个数据库 / 表。完全可以媲美大家熟悉的 phpMyadmin。</p>\n<p>Sequel Pro 的部分特性如下：</p>\n<ol>\n<li>操作快速，简单。通过简单的几个参数设定即可连接本地或远程 MySQL。</li>\n<li>支持多窗口操作。在不同的个窗口中，对多数据库实施操作。</li>\n<li>SQL 语句的语法彩色、加亮显示。</li>\n<li>SQL 语句的关键字、表名、字段名的自动完成。</li>\n<li>支持 30 多种不同的字符编码。</li>\n<li>快速导入 / 恢复、导出 / 备份 SQL 及 CSV 格式的数据。</li>\n<li>兼容 MySQL3、4、5。</li>\n<li>支持在 MAMP/XAMP 架构上连接数据库，支持 SSH 连接模式；</li>\n<li>免费使用，当然，如果你觉得不错，可以 Donate 支持一下作者。</li>\n</ol>\n<h2 id=\"通过-root-连接数据库\"><a class=\"anchor\" href=\"#通过-root-连接数据库\">#</a> 通过 root 连接数据库</h2>\n<p>新建数据库和用户需要用到数据库的 root 用户权限，所以，我们用 root 进行登录，如下图：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCt\" alt=\"clipboard.png\" /></p>\n<h2 id=\"建立数据库\"><a class=\"anchor\" href=\"#建立数据库\">#</a> 建立数据库</h2>\n<p>点击  <code>Choose Database</code> -&gt;  <code>Add Database</code>  创建数据库</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBQ\" alt=\"clipboard.png\" /></p>\n<p>字符集选择默认的  <code>utf-8</code>  即可。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBR\" alt=\"clipboard.png\" /></p>\n<h2 id=\"建立数据库用户\"><a class=\"anchor\" href=\"#建立数据库用户\">#</a> 建立数据库用户</h2>\n<p>点击右上角 <code>User</code> ，弹出下面用户操作对话框，建立 web 用户</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBU\" alt=\"clipboard.png\" /></p>\n<p>给刚才新建的  <code>laravel</code>  数据库赋予权限，此处权限全选了，大家也可以有目的的选择权限：<br />\n<img data-src=\"https://segmentfault.com/img/bVApBV\" alt=\"clipboard.png\" /></p>\n<h2 id=\"用新建-web-用户连接-laravel-数据库\"><a class=\"anchor\" href=\"#用新建-web-用户连接-laravel-数据库\">#</a> 用新建 web 用户连接 laravel 数据库</h2>\n<p>首先，退出用 root 登陆的 sequel pro，再重新打开。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApB1\" alt=\"clipboard.png\" /></p>\n<ol>\n<li>如果非新建数据库界面，可以点击 <code>1</code>  添加收藏夹，下次可以直接点击该处进行连接；</li>\n<li>默认数据库连接方式为 <code>Standard</code>  标准模式，大家也可以选用 <code>Socket</code>  或 <code>SSH</code>  方式。选好方式，按照提示输入服务器、用户名、密码和数据库名，若端口有修改，输入端口号；</li>\n<li>点 <code>3</code>   <code>Add to Favorites</code>  则在 <code>4</code>  处会新增一个数据库连接收藏，点 <code>Save changes</code>  则保存到当前收藏；</li>\n<li>点击 <code>5</code>   <code>Connect</code>  连接数据库。</li>\n</ol>\n<h2 id=\"增加-编辑-删除数据表\"><a class=\"anchor\" href=\"#增加-编辑-删除数据表\">#</a> 增加、编辑、删除数据表</h2>\n<p>这部分和 phpMyadmin 等都类似，就不展开来介绍了，大概功能区如下图：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApB8\" alt=\"clipboard.png\" /></p>\n<h2 id=\"删除数据库\"><a class=\"anchor\" href=\"#删除数据库\">#</a> 删除数据库</h2>\n<p>貌似没有图形化删除数据库的地方，不过可以在 <code>Query</code>  选项下，执行</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop database dbname</span><br></pre></td></tr></table></figure><br />\n 进行删除，下面以删除 laravel 数据库为例，执行后，状态栏显示无错误，右上角数据库状态回到  <code>choose database</code> 。点开就会看到已找不到 laravel 数据库。</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApBP\" alt=\"clipboard.png\" /></p>\n<h2 id=\"用-laravel-的-artisan-工具建立和更新数据表\"><a class=\"anchor\" href=\"#用-laravel-的-artisan-工具建立和更新数据表\">#</a> 用 laravel 的 artisan 工具建立和更新数据表</h2>\n<h3 id=\"laravel-连接配置\"><a class=\"anchor\" href=\"#laravel-连接配置\">#</a> laravel 连接配置</h3>\n<p>找到项目  <code>.env</code>  文件，修改下面几个参数</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCj\" alt=\"clipboard.png\" /></p>\n<h3 id=\"migrate-文件编辑\"><a class=\"anchor\" href=\"#migrate-文件编辑\">#</a> migrate 文件编辑</h3>\n<p>找到 database/migrations 目录，查看或编辑目录下的 migrate 文件</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCk\" alt=\"clipboard.png\" /></p>\n<p>一般内容如下所示，调整为你需要的内容即可：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCm\" alt=\"clipboard.png\" /></p>\n<h3 id=\"命令行执行-migrate-操作\"><a class=\"anchor\" href=\"#命令行执行-migrate-操作\">#</a> 命令行执行 migrate 操作</h3>\n<p>命令行模式进入项目根目录，执行下面命令，则数据库就会按照几个 migrate 文件要求，执行数据库操作。</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据库查看-migrate-命令执行结果\"><a class=\"anchor\" href=\"#数据库查看-migrate-命令执行结果\">#</a> 数据库查看 migrate 命令执行结果</h3>\n<p>我们用 sequel pro 连接数据库，可以看到操作后如下：</p>\n<p><img data-src=\"https://segmentfault.com/img/bVApCo\" alt=\"clipboard.png\" /></p>\n<p>可见数据库和用户建立成功，项目已能正常连接数据库。</p>\n<h2 id=\"答用户问\"><a class=\"anchor\" href=\"#答用户问\">#</a> 答用户问</h2>\n<h3 id=\"如何调整主键\"><a class=\"anchor\" href=\"#如何调整主键\">#</a> 如何调整主键</h3>\n<p>点到 Query 选项卡</p>\n<h4 id=\"1-如果原先没有主键且需要增加的字段为-not-null可以执行下列命令\"><a class=\"anchor\" href=\"#1-如果原先没有主键且需要增加的字段为-not-null可以执行下列命令\">#</a> 1. 如果原先没有主键，且需要增加的字段为 not null，可以执行下列命令</h4>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE &#96;users&#96; ADD PRIMARY KEY ( &#96;name&#96; )</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-如果原先主键已存在目的是改变主键则执行如下步骤\"><a class=\"anchor\" href=\"#2-如果原先主键已存在目的是改变主键则执行如下步骤\">#</a> 2. 如果原先主键已存在，目的是改变主键，则执行如下步骤</h4>\n<ul>\n<li>如果原主键有外键依赖，要先删除外键依赖；</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;FK_Table&#96; drop foreign key FK_Name;（FK_Table 为有外键关系的表，FK_Name 为外键约束名）</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>如果原主键为自动递增，要先去掉自动递增：</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; modify &#96;id&#96; int(10) unsigned NOT NULL;（根据实际字段属性来）</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>再删除主键</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; drop primary key;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>然后再增加主键</li>\n</ul>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alter table &#96;users&#96; add primary key(&#96;name&#96;);</span><br></pre></td></tr></table></figure><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3QvbXlzcWw=\">mysql</span></p>\n",
            "tags": []
        },
        {
            "id": "http://bglh.xyz/2021/02/24/python.pip/",
            "url": "http://bglh.xyz/2021/02/24/python.pip/",
            "title": "",
            "date_published": "2021-02-24T06:18:23.142Z",
            "content_html": "<h1 id=\"mac-修改pip-镜像源\"><a class=\"anchor\" href=\"#mac-修改pip-镜像源\">#</a> Mac 修改 pip 镜像源</h1>\n<ol>\n<li>进入根目录： <code>cd ~/</code></li>\n<li>进入.pip 目录  <code>cd .pip</code></li>\n<li>如果不存在文件夹就新建 <code>mkdir .pip</code></li>\n<li>进入  <code>cd .pip</code></li>\n<li>创建 pip.conf 文件  <code>touch pip.conf</code></li>\n<li>修改： <code>vim pip.conf</code></li>\n</ol>\n<h2 id=\"暂时\"><a class=\"anchor\" href=\"#暂时\">#</a> 暂时</h2>\n<p><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install*** -i https:<span class=\"comment\">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"永久修改内容\"><a class=\"anchor\" href=\"#永久修改内容\">#</a> 永久修改内容：</h2>\n<p><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">global</span>]</span><br><span class=\"line\">index-url=https:<span class=\"comment\">//mirrors.aliyun.com/pypi/simple/</span></span><br><span class=\"line\">[<span class=\"meta\">install</span>]</span><br><span class=\"line\">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">global</span>]</span><br><span class=\"line\">timeout = <span class=\"number\">6000</span></span><br><span class=\"line\">index-url = https:<span class=\"comment\">//pypi.douban.com/simple/ </span></span><br><span class=\"line\">[<span class=\"meta\">install</span>]</span><br><span class=\"line\">use-mirrors = <span class=\"literal\">true</span></span><br><span class=\"line\">mirrors = https:<span class=\"comment\">//pypi.douban.com/simple/ </span></span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"国内源\"><a class=\"anchor\" href=\"#国内源\">#</a> 国内源：</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLmRvdWJhbi5jb20v\">http://pypi.douban.com/</span> 豆瓣</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLmh1c3R1bmlxdWUuY29tLw==\">http://pypi.hustunique.com/</span> 华中理工大学</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLnNkdXRsaW51eC5vcmcv\">http://pypi.sdutlinux.org/</span> 山东理工大学</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLmppYW5zaHUuY29tLz90PWh0dHA6Ly9weXBpLm1pcnJvcnMudXN0Yy5lZHUuY24v\">http://pypi.mirrors.ustc.edu.cn/</span> 中国科学技术大学</li>\n</ul>\n<p>列出当前安装的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure><br />\n 列出可升级的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span> --outdate</span><br></pre></td></tr></table></figure><br />\n 升级一个包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install --upgrade requests  // mac,linux,unix 在命令前加 sudo -H</span><br></pre></td></tr></table></figure><br />\n 升级所有可升级的包：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip3 freeze --local | grep -v <span class=\"string\">&#x27;^-e&#x27;</span> | cut -d = -f <span class=\"number\">1</span>  | xargs -n1 pip3 install -U</span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 <span class=\"built_in\">list</span> -o --<span class=\"built_in\">format</span> legacy|awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>` ; do pip install --upgrade $i; done</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "http://bglh.xyz/2021/02/23/%E4%B8%BB%E9%A2%98%E5%BC%80%E5%8F%91/",
            "url": "http://bglh.xyz/2021/02/23/%E4%B8%BB%E9%A2%98%E5%BC%80%E5%8F%91/",
            "title": "",
            "date_published": "2021-02-23T05:59:48.185Z",
            "content_html": "<h1 id=\"hexo主题开发\"><a class=\"anchor\" href=\"#hexo主题开发\">#</a> hexo 主题开发</h1>\n<h3 id=\"1hexo-结构\"><a class=\"anchor\" href=\"#1hexo-结构\">#</a> 1.hexo 结构</h3>\n<p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">_config.yml</span>       <span class=\"string\">//</span> <span class=\"string\">总体的配置文件</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">node_modules</span>      <span class=\"string\">//</span> <span class=\"string\">NodeJs</span> <span class=\"string\">所依赖的包，后期也可以自己添加插件</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">package-lock.json</span> <span class=\"string\">//</span> <span class=\"string\">支持</span> <span class=\"string\">hexo</span> <span class=\"string\">运行的</span> <span class=\"string\">NodeJs</span> <span class=\"string\">包</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">package.json</span>      <span class=\"string\">//</span> <span class=\"string\">自定义的</span> <span class=\"string\">NodeJs</span> <span class=\"string\">包</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">scaffolds</span>         <span class=\"string\">//</span> <span class=\"string\">Hexo</span> <span class=\"string\">Markdown</span> <span class=\"string\">加载时的关键字，如data,title等,它会在启动的时候默认加载</span></span><br><span class=\"line\"><span class=\"string\">├──</span> <span class=\"string\">source</span>            <span class=\"string\">//</span> <span class=\"string\">md</span> <span class=\"string\">源文件目录</span></span><br><span class=\"line\"><span class=\"string\">└──</span> <span class=\"string\">themes</span>            <span class=\"string\">//</span> <span class=\"string\">主题文件夹</span></span><br><span class=\"line\">    <span class=\"string\">└──</span> <span class=\"string\">landscape</span>     <span class=\"string\">//</span> <span class=\"string\">默认主题</span>     </span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2主题结构\"><a class=\"anchor\" href=\"#2主题结构\">#</a> 2. 主题结构</h3>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└── bg\t                &#x2F;&#x2F; 自建的主题目录</span><br><span class=\"line\">    ├── _config.yml     &#x2F;&#x2F; 主题配置文件</span><br><span class=\"line\">    ├── layout          &#x2F;&#x2F; 主要构造 html 的模板</span><br><span class=\"line\">    │   ├── index.ejs   &#x2F;&#x2F; 主页模板</span><br><span class=\"line\">    │   ├── layout.ejs  &#x2F;&#x2F; 布局模板</span><br><span class=\"line\">    │   └── post.ejs    &#x2F;&#x2F; md 编译成 html 后的文件模板</span><br><span class=\"line\">    └── source          &#x2F;&#x2F; 静态资源文件目录</span><br><span class=\"line\">        ├── css         &#x2F;&#x2F; css 样式目录</span><br><span class=\"line\">        └── js          &#x2F;&#x2F; JavaScript 脚本目录</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3\"><a class=\"anchor\" href=\"#3\">#</a> 3.</h3>\n<h3 id=\"4\"><a class=\"anchor\" href=\"#4\">#</a> 4.</h3>\n<h3 id=\"5\"><a class=\"anchor\" href=\"#5\">#</a> 5.</h3>\n<h3 id=\"6\"><a class=\"anchor\" href=\"#6\">#</a> 6.</h3>\n<h3 id=\"7\"><a class=\"anchor\" href=\"#7\">#</a> 7.</h3>\n<h3 id=\"8\"><a class=\"anchor\" href=\"#8\">#</a> 8.</h3>\n<h3 id=\"9\"><a class=\"anchor\" href=\"#9\">#</a> 9.</h3>\n<p>显示 Mac 隐藏文件的命令</p>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool true<br />\nkillall Finder</p>\n<p>隐藏 Mac 隐藏文件的命令<br />\n defaults write com.apple.finder AppleShowAllFiles -bool false<br />\nkillall Finder</p>\n",
            "tags": []
        },
        {
            "id": "http://bglh.xyz/2021/02/23/hexo%E7%AE%80%E4%BB%8B/",
            "url": "http://bglh.xyz/2021/02/23/hexo%E7%AE%80%E4%BB%8B/",
            "title": "",
            "date_published": "2021-02-23T05:17:45.825Z",
            "content_html": "<h1 id=\"用hexo搭建一个静态站点\"><a class=\"anchor\" href=\"#用hexo搭建一个静态站点\">#</a> 用 hexo 搭建一个静态站点</h1>\n<h3 id=\"1下载必须文件\"><a class=\"anchor\" href=\"#1下载必须文件\">#</a> 1. 下载必须文件</h3>\n<p>A.<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==\">nodejs</span><br />\nB.<span class=\"exturl\" data-url=\"aHR0cDovL2dpdC1zY20uY29tLw==\">git</span><br />\nC.hexo</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\"><a class=\"anchor\" href=\"#2创建一个文件夹并在此文件夹中打开终端初始化hexo创建网页\">#</a> 2. 创建一个文件夹并在此文件夹中打开终端初始化 hexo 创建网页</h3>\n<p>第一步：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init\t\t\t<span class=\"comment\">#初始化文件夹</span></span><br></pre></td></tr></table></figure><br />\n 第二步：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g      \t<span class=\"comment\">#编译文件</span></span><br><span class=\"line\">$ hexo s\t\t\t\t<span class=\"comment\">#本地部署</span></span><br><span class=\"line\">$ hexo d\t\t\t\t<span class=\"comment\">#部署网页</span></span><br><span class=\"line\">$ hexo server\t\t<span class=\"comment\">#本地部署但不生成文件可修改看变化</span></span><br><span class=\"line\">$ hexo clean\t\t<span class=\"comment\">#清除垃圾文件</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3部署\"><a class=\"anchor\" href=\"#3部署\">#</a> 3. 部署</h3>\n<p>A. 部署到服务器</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gcc -y\t\t\t\t\t\t\t  <span class=\"comment\">#先安装好 Nginx安装环境</span></span><br><span class=\"line\">yum install pcre pcre-devel -y</span><br><span class=\"line\">yum install zlib zlib-devel -y  </span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://nginx.org/download/nginx-1.16.0.tar.gz      <span class=\"comment\">#下载</span></span><br><span class=\"line\">tar zxvf nginx-1.16.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.16.0./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/<span class=\"built_in\">local</span>/nginx <span class=\"comment\">#编译</span></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install  <span class=\"comment\">#安装   </span></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx/sbin/./nginx B.  <span class=\"comment\">#启动 nginx</span></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-sftp --save  <span class=\"comment\">#首先得在 hexo 目录下安装 sftp 插件</span></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&quot;sftp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">&quot;192.168.0.100&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span> <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">pass:</span> <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">remotePath:</span> <span class=\"string\">&quot;/usr/local/nginx/html&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">22</span> \t\t</span><br><span class=\"line\">  <span class=\"comment\">###然后在 _config.yml 中配置 deploy</span></span><br></pre></td></tr></table></figure><br />\nB. 部署到<a href=\"www.github.com\"> GitHub</a></p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save  <span class=\"comment\">#先添加 git 插件</span></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&quot;git&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&quot;https://github.com/ITAbyss/itabyss.github.io.git&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">&quot;master&quot;</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        }
    ]
}